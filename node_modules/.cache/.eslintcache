[{"/home/thainguyen/Source/uet-smta-test/src/index.js":"1","/home/thainguyen/Source/uet-smta-test/src/App.js":"2","/home/thainguyen/Source/uet-smta-test/src/context/AuthContext.js":"3","/home/thainguyen/Source/uet-smta-test/src/context/AuthReducer.js":"4","/home/thainguyen/Source/uet-smta-test/src/HomePage/StudentHomePage.js":"5","/home/thainguyen/Source/uet-smta-test/src/SignInPage/SignInForm.js":"6","/home/thainguyen/Source/uet-smta-test/src/HomePage/TeacherHomePage.js":"7","/home/thainguyen/Source/uet-smta-test/src/Dashboard/Dashboard.js":"8","/home/thainguyen/Source/uet-smta-test/src/Forum/StudentForum.js":"9","/home/thainguyen/Source/uet-smta-test/src/Forum/TeacherForum.js":"10","/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfStudents/ListOfStudents.js":"11","/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfClasses/ListOfClasses.js":"12","/home/thainguyen/Source/uet-smta-test/src/NavigationMenu/ChangeInfo/ChangeInfoTeacher.js":"13","/home/thainguyen/Source/uet-smta-test/src/NavigationMenu/ChangePass/ChangePass.js":"14","/home/thainguyen/Source/uet-smta-test/src/Lists/StudentClassList/ClassList.js":"15","/home/thainguyen/Source/uet-smta-test/src/messenger/Messenger.jsx":"16","/home/thainguyen/Source/uet-smta-test/src/SignInPage/Header.js":"17","/home/thainguyen/Source/uet-smta-test/src/SignInPage/Body.js":"18","/home/thainguyen/Source/uet-smta-test/src/SignInPage/Footer.js":"19","/home/thainguyen/Source/uet-smta-test/src/Dashboard/BarChart.js":"20","/home/thainguyen/Source/uet-smta-test/src/Dashboard/PieChart.js":"21","/home/thainguyen/Source/uet-smta-test/src/Dashboard/ClassesDropDown.js":"22","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/NavigationBar.js":"23","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/SidebarStudent.js":"24","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/Sidebar.js":"25","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/Footer.js":"26","/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfClasses/Table.js":"27","/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfStudents/Table.js":"28","/home/thainguyen/Source/uet-smta-test/src/NavigationMenu/ChangePass/Header.js":"29","/home/thainguyen/Source/uet-smta-test/src/Lists/StudentClassList/Table.js":"30","/home/thainguyen/Source/uet-smta-test/src/NavigationMenu/ChangePass/Body.js":"31","/home/thainguyen/Source/uet-smta-test/src/Forum/Posts/ModalBtn.js":"32","/home/thainguyen/Source/uet-smta-test/src/Forum/components/Boxpost.jsx":"33","/home/thainguyen/Source/uet-smta-test/src/messenger/components/conversations/Conversation.jsx":"34","/home/thainguyen/Source/uet-smta-test/src/messenger/components/message/Message.jsx":"35","/home/thainguyen/Source/uet-smta-test/src/SignInPage/Form.js":"36","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/SidebarStudentData.js":"37","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/DropdownAva.js":"38","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/DropNotification.js":"39","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/SidebarData.js":"40","/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfStudents/ClassName.js":"41","/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfStudents/AddStudentButton.js":"42","/home/thainguyen/Source/uet-smta-test/src/Lists/StudentClassList/ClassName.js":"43","/home/thainguyen/Source/uet-smta-test/src/Lists/FileExport/FileExport.js":"44","/home/thainguyen/Source/uet-smta-test/src/Lists/Filters/FilterButton.js":"45","/home/thainguyen/Source/uet-smta-test/src/Lists/Filters/SpecificFilterButton.js":"46","/home/thainguyen/Source/uet-smta-test/src/Lists/FileInput/FileInput.js":"47","/home/thainguyen/Source/uet-smta-test/src/Forum/Posts/Comment.js":"48","/home/thainguyen/Source/uet-smta-test/src/SignInPage/CustomDialog.js":"49","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/NotiItem.js":"50","/home/thainguyen/Source/uet-smta-test/src/Lists/Filters/PopOverHover.js":"51","/home/thainguyen/Source/uet-smta-test/src/Forum/Posts/CommentList.js":"52","/home/thainguyen/Source/uet-smta-test/src/Forum/Posts/CommentChildren.js":"53","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/DropdownItems.js":"54"},{"size":335,"mtime":1638769285433,"results":"55","hashOfConfig":"56"},{"size":5482,"mtime":1638769285433,"results":"57","hashOfConfig":"56"},{"size":741,"mtime":1638769285441,"results":"58","hashOfConfig":"56"},{"size":913,"mtime":1638769285441,"results":"59","hashOfConfig":"56"},{"size":584,"mtime":1638769285437,"results":"60","hashOfConfig":"56"},{"size":608,"mtime":1638769285441,"results":"61","hashOfConfig":"56"},{"size":660,"mtime":1638769285437,"results":"62","hashOfConfig":"56"},{"size":748,"mtime":1638769285433,"results":"63","hashOfConfig":"56"},{"size":2018,"mtime":1638769285437,"results":"64","hashOfConfig":"56"},{"size":2005,"mtime":1638769285437,"results":"65","hashOfConfig":"56"},{"size":468,"mtime":1638769285437,"results":"66","hashOfConfig":"56"},{"size":467,"mtime":1638769285437,"results":"67","hashOfConfig":"56"},{"size":13191,"mtime":1638769285441,"results":"68","hashOfConfig":"56"},{"size":477,"mtime":1638769285441,"results":"69","hashOfConfig":"56"},{"size":479,"mtime":1638769285441,"results":"70","hashOfConfig":"56"},{"size":4694,"mtime":1638769285441,"results":"71","hashOfConfig":"56"},{"size":718,"mtime":1638769285441,"results":"72","hashOfConfig":"56"},{"size":390,"mtime":1638769285441,"results":"73","hashOfConfig":"56"},{"size":349,"mtime":1638769285441,"results":"74","hashOfConfig":"56"},{"size":1692,"mtime":1638769285437,"results":"75","hashOfConfig":"56"},{"size":1593,"mtime":1638769285437,"results":"76","hashOfConfig":"56"},{"size":1578,"mtime":1638769285437,"results":"77","hashOfConfig":"56"},{"size":1910,"mtime":1638769285437,"results":"78","hashOfConfig":"56"},{"size":1369,"mtime":1638769285437,"results":"79","hashOfConfig":"56"},{"size":1349,"mtime":1638769285437,"results":"80","hashOfConfig":"56"},{"size":250,"mtime":1638769285437,"results":"81","hashOfConfig":"56"},{"size":2748,"mtime":1638769285441,"results":"82","hashOfConfig":"56"},{"size":10200,"mtime":1638769285437,"results":"83","hashOfConfig":"56"},{"size":868,"mtime":1638769285441,"results":"84","hashOfConfig":"56"},{"size":3209,"mtime":1638769285441,"results":"85","hashOfConfig":"56"},{"size":5454,"mtime":1638769285441,"results":"86","hashOfConfig":"56"},{"size":7832,"mtime":1638769285437,"results":"87","hashOfConfig":"56"},{"size":4540,"mtime":1638769285437,"results":"88","hashOfConfig":"56"},{"size":912,"mtime":1638769285441,"results":"89","hashOfConfig":"56"},{"size":510,"mtime":1638769285441,"results":"90","hashOfConfig":"56"},{"size":4621,"mtime":1638769285441,"results":"91","hashOfConfig":"56"},{"size":652,"mtime":1638769285437,"results":"92","hashOfConfig":"56"},{"size":952,"mtime":1638769285437,"results":"93","hashOfConfig":"56"},{"size":918,"mtime":1638769285437,"results":"94","hashOfConfig":"56"},{"size":779,"mtime":1638769285437,"results":"95","hashOfConfig":"56"},{"size":195,"mtime":1638769285437,"results":"96","hashOfConfig":"56"},{"size":11437,"mtime":1638769285437,"results":"97","hashOfConfig":"56"},{"size":270,"mtime":1638769285441,"results":"98","hashOfConfig":"56"},{"size":1349,"mtime":1638769285437,"results":"99","hashOfConfig":"56"},{"size":4425,"mtime":1638769285437,"results":"100","hashOfConfig":"56"},{"size":5700,"mtime":1638769285437,"results":"101","hashOfConfig":"56"},{"size":5087,"mtime":1638769285437,"results":"102","hashOfConfig":"56"},{"size":3030,"mtime":1638769285437,"results":"103","hashOfConfig":"56"},{"size":1447,"mtime":1638769285441,"results":"104","hashOfConfig":"56"},{"size":415,"mtime":1638769285437,"results":"105","hashOfConfig":"56"},{"size":2209,"mtime":1638769285437,"results":"106","hashOfConfig":"56"},{"size":629,"mtime":1638769285437,"results":"107","hashOfConfig":"56"},{"size":1583,"mtime":1638769285437,"results":"108","hashOfConfig":"56"},{"size":670,"mtime":1638769285437,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ovfb0q",{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/thainguyen/Source/uet-smta-test/src/index.js",[],"/home/thainguyen/Source/uet-smta-test/src/App.js",[],"/home/thainguyen/Source/uet-smta-test/src/context/AuthContext.js",[],"/home/thainguyen/Source/uet-smta-test/src/context/AuthReducer.js",[],"/home/thainguyen/Source/uet-smta-test/src/HomePage/StudentHomePage.js",["243"],"import React from 'react';\nimport NavigationBar from './components/NavigationBar';\nimport SidebarStudent from './components/SidebarStudent';\nimport { Container } from './TeacherHomePage';\n\nimport Footer from './components/Footer';\nfunction StudentHomePage() {\n  return (\n    <>\n      <NavigationBar />\n      <img\n        src=\"https://www.schoology.com/sites/default/files/schoology-learning-management-system.jpg\"\n        alt=\"teacher\"\n        style={{ width: '100%', height: '100%' }}\n      />\n      <Footer />\n      <SidebarStudent />\n    </>\n  );\n}\nexport default StudentHomePage;\n","/home/thainguyen/Source/uet-smta-test/src/SignInPage/SignInForm.js",[],"/home/thainguyen/Source/uet-smta-test/src/HomePage/TeacherHomePage.js",[],"/home/thainguyen/Source/uet-smta-test/src/Dashboard/Dashboard.js",[],"/home/thainguyen/Source/uet-smta-test/src/Forum/StudentForum.js",["244"],"import React, { useEffect, useState } from 'react';\nimport SidebarStudent from '../HomePage/components/SidebarStudent';\nimport NavigationBar from '../HomePage/components/NavigationBar';\nimport ModalBtn from './Posts/ModalBtn';\nimport BoxPost from './components/Boxpost';\nimport './studentForum.css';\nimport axios from 'axios';\nconst StudentForum = () => {\n  const [posts, setPosts] = useState([]);\n  const [headingText, setHeadingText] = useState('');\n  const [contentText, setContentText] = useState('');\n  useEffect(async () => {\n    await axios\n      .get('http://localhost:5000/api/posts')\n      .then((res) => {\n        if (res.data.message !== 'No posts found') {\n          setPosts(res.data);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    <>\n      <div style={{ bgolor: '#E5E5E5' }}>\n        <NavigationBar />\n        <div className=\"titleText\">Diễn Đàn </div>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <ModalBtn\n            btnName=\"Đăng bài\"\n            title=\"TẠO MỘT BÀI ĐĂNG MỚI\"\n            submitBtn=\"Đăng bài\"\n            headingText={headingText}\n            contentText={contentText}\n            setHeadingText={setHeadingText}\n            setContentText={setContentText}\n            posts={posts}\n            setPosts={setPosts}\n          />\n        </div>\n        <div style={{ justifyContent: 'center', display: 'flex' }}>\n          <div className=\"postMenuWrapper\">\n            {posts.length > 0 ? (\n              posts.map((post) => {\n                return (\n                  <BoxPost\n                    key={post.id}\n                    post={post}\n                    posts={posts}\n                    setPosts={setPosts}\n                  />\n                );\n              })\n            ) : (\n              <div>Không có bài đăng</div>\n            )}\n          </div>\n        </div>\n        <SidebarStudent />\n      </div>\n    </>\n  );\n};\n\nexport default StudentForum;\n","/home/thainguyen/Source/uet-smta-test/src/Forum/TeacherForum.js",["245","246"],"import React, { useEffect, useState, useRef } from 'react';\nimport Sidebar from '../HomePage/components/Sidebar';\nimport NavigationBar from '../HomePage/components/NavigationBar';\nimport ModalBtn from './Posts/ModalBtn';\nimport BoxPost from './components/Boxpost';\nimport './studentForum.css';\nimport axios from 'axios';\nconst TeacherForum = () => {\n  const [posts, setPosts] = useState([]);\n  const [headingText, setHeadingText] = useState('');\n  const [contentText, setContentText] = useState('');\n  useEffect(async () => {\n    await axios\n      .get('http://localhost:5000/api/posts')\n      .then((res) => {\n        if (res.data.message !== 'No posts found') {\n          setPosts(res.data);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    <>\n      <div style={{ bgolor: '#E5E5E5' }}>\n        <NavigationBar />\n        <div className=\"titleText\">Diễn Đàn </div>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <ModalBtn\n            btnName=\"Đăng bài\"\n            title=\"TẠO MỘT BÀI ĐĂNG MỚI\"\n            submitBtn=\"Đăng bài\"\n            headingText={headingText}\n            contentText={contentText}\n            setHeadingText={setHeadingText}\n            setContentText={setContentText}\n            posts={posts}\n            setPosts={setPosts}\n          />\n        </div>\n        <div style={{ justifyContent: 'center', display: 'flex' }}>\n          <div className=\"postMenuWrapper\">\n            {posts.length > 0 ? (\n              posts.map((post) => {\n                return (\n                  <BoxPost\n                    key={post.id}\n                    post={post}\n                    posts={posts}\n                    setPosts={setPosts}\n                  />\n                );\n              })\n            ) : (\n              <div>Không có bài đăng</div>\n            )}\n          </div>\n        </div>\n        <Sidebar />\n      </div>\n    </>\n  );\n};\n\nexport default TeacherForum;\n","/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfStudents/ListOfStudents.js",["247"],"import React from 'react';\nimport Table from './Table';\nimport Sidebar from '../../HomePage/components/Sidebar';\nimport NavigationBar from '../../HomePage/components/NavigationBar';\nimport { Container } from '../../HomePage/TeacherHomePage';\nimport Footer from '../../HomePage/components/Footer';\nconst ListOfStudents = () => {\n  return (\n    <>\n      <NavigationBar />\n      <Table />\n      <Sidebar />\n      <Footer />\n    </>\n  );\n};\nexport default ListOfStudents;\n","/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfClasses/ListOfClasses.js",["248"],"import React from 'react';\nimport Table from './Table';\nimport Sidebar from '../../HomePage/components/Sidebar';\nimport NavigationBar from '../../HomePage/components/NavigationBar';\nimport { Container } from '../../HomePage/TeacherHomePage';\nimport Footer from '../../HomePage/components/Footer';\nconst ListOfClasses = () => {\n  return (\n    <>\n      <NavigationBar />\n      <Table />\n      <Footer />\n      <Sidebar />\n    </>\n  );\n};\n\nexport default ListOfClasses;\n","/home/thainguyen/Source/uet-smta-test/src/NavigationMenu/ChangeInfo/ChangeInfoTeacher.js",["249","250","251","252","253"],"import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\nimport NavigationBar from '../../HomePage/components/NavigationBar';\nimport Sidebar from '../../HomePage/components/Sidebar';\nimport SidebarStudent from '../../HomePage/components/SidebarStudent';\nimport validator from 'validator';\nfunction changeDateFormat(responseDate) {\n  var date = new Date(responseDate);\n  var min = date.getMinutes();\n  var hour = date.getHours();\n  var second = date.getSeconds();\n  var day = date.getUTCDate();\n  var month = date.getUTCMonth() + 1;\n  var year = date.getFullYear();\n\n  month = (month > 9 ? '' : '0') + month;\n  day = (day > 9 ? '' : '0') + day;\n\n  return `${year}-${month}-${day}`;\n}\nfunction ChangeInfoTeacher() {\n  const role = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).role\n    : '';\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState('');\n  const [fieldOfStudy, setFieldOfStudy] = useState('');\n  const [introduction, setIntroduction] = useState('');\n  const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/users/${username}/show`)\n      .then((res) => {\n        setName(res.data.name);\n        setEmail(res.data.email);\n        setPhone(res.data.phoneNumber);\n        setDateOfBirth(changeDateFormat(res.data.dateOfBirth));\n        setFieldOfStudy(res.data.fieldOfStudy);\n        setIntroduction(res.data.introduction);\n      })\n      .catch((err) => {\n        setSuccessMessage('Cập nhật thông tin thất bại !');\n      });\n  }, []);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [nameErrorMessage, setNameErrorMessage] = useState('');\n  const [emailErrorMessage, setEmailErrorMessage] = useState('');\n  const [phoneErrorMessage, setPhoneErrorMessage] = useState('');\n  const handleName = (e) => {\n    setName(e.target.value);\n    setNameErrorMessage('');\n    setSuccessMessage('');\n  };\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n    setEmailErrorMessage('');\n    setSuccessMessage('');\n  };\n  const handlePhone = (e) => {\n    setPhone(e.target.value);\n    setPhoneErrorMessage('');\n    setSuccessMessage('');\n  };\n  const handleDateOfBirth = (e) => {\n    setDateOfBirth(e.target.value);\n    setSuccessMessage('');\n  };\n  const handleFieldOfStudy = (e) => {\n    setFieldOfStudy(e.target.value);\n    setSuccessMessage('');\n  };\n  const handleIntroduction = (e) => {\n    setIntroduction(e.target.value);\n    setSuccessMessage('');\n  };\n  const stringContainsNumber = (_string) => {\n    if (_string.length <= 0) {\n      return true;\n    } else {\n      return /\\d/.test(_string);\n    }\n  };\n  const phoneNumberValidator = (_phone) => {\n    if (/[a-zA-Z]/g.test(_phone) || _phone.length != 10) {\n      return false;\n    }\n    return true;\n  };\n  const ref = useRef();\n  const history = useHistory();\n  const handleSubmit = (e) => {\n    if (\n      validator.isEmail(email) &&\n      phoneNumberValidator(phone) &&\n      !stringContainsNumber(name)\n    ) {\n      axios\n        .post(`http://localhost:5000/api/users/${username}/update`, {\n          email: email,\n          name: name,\n          phoneNumber: phone,\n          dateOfBirth: dateOfBirth,\n          fieldOfStudy: fieldOfStudy,\n          introduction: introduction,\n        })\n        .then((res) => {\n          if (res.data.success) {\n            setSuccessMessage('Cập nhật thông tin thành công');\n          }\n        })\n        .catch((err) => {\n          setSuccessMessage('Cập nhật thông tin thất bại');\n          console.log(err);\n        });\n    }\n    if (stringContainsNumber(name)) {\n      setNameErrorMessage('Tên không hợp lệ');\n    }\n    if (!validator.isEmail(email)) {\n      setEmailErrorMessage('Email không hợp lệ');\n    }\n    if (!phoneNumberValidator(phone)) {\n      setPhoneErrorMessage('Số điện thoại không hợp lệ');\n    }\n    e.preventDefault();\n  };\n  return (\n    <Wrapper>\n      <NavigationBar />\n      <Container>\n        <h1> Thông tin cá nhân </h1>\n        <div className=\"line\">\n          <div className=\"FullName\">\n            <p className=\"FieldToChange\">\n              Họ và tên: <Red>*</Red>\n              {nameErrorMessage && (\n                <ErrorMessage>{nameErrorMessage}</ErrorMessage>\n              )}\n            </p>\n            <div className=\"Field2\">\n              <Input\n                name=\"FullName\"\n                id=\"FullName\"\n                style={{ width: '400px', height: '55px;' }}\n                value={name}\n                type=\"text\"\n                onChange={handleName}\n              />\n            </div>\n          </div>\n          <div className=\"DateOfBirth\">\n            <p className=\"FieldToChange\">\n              Ngày sinh: <Red>*</Red>\n            </p>\n            <div className=\"Field2\">\n              {/* <Input\n                name=\"Day\"\n                id=\"Day\"\n                style={{ width: '100px', height: '55px' }}\n                placeholder=\"01\"\n              />\n              <p className=\"Slash\">/</p>\n              <Input\n                name=\"Month\"\n                id=\"Month\"\n                style={{ width: '100px', height: '55px' }}\n                placeholder=\"01\"\n              />\n              <p className=\"Slash\">/</p>\n              <Input\n                name=\"Year\"\n                id=\"Year\"\n                style={{ width: '100px', height: '55px' }}\n                placeholder=\"2000\"\n              /> */}\n              <Input\n                name=\"FullName\"\n                id=\"FullName\"\n                style={{ width: '400px', height: '55px' }}\n                type=\"text\"\n                value={dateOfBirth}\n                ref={ref}\n                onFocus={() => (ref.current.type = 'date')}\n                onBlur={() => {\n                  ref.current.type = 'text';\n                  ref.current.value = dateOfBirth;\n                }}\n                onChange={handleDateOfBirth}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"line\">\n          <div className=\"Email\">\n            <p className=\"FieldToChange\">\n              Email: <Red>*</Red>\n              {emailErrorMessage && (\n                <ErrorMessage>{emailErrorMessage}</ErrorMessage>\n              )}\n            </p>\n            <div className=\"Field2\">\n              <Input\n                name=\"Email\"\n                id=\"Email\"\n                style={{ width: '400px', height: '55px;' }}\n                value={email}\n                type=\"email\"\n                onChange={handleEmail}\n              />\n            </div>\n          </div>\n          <div className=\"Identifier\">\n            {role === 'Teacher' ? (\n              <p className=\"FieldToChange\">Mã số giảng viên: </p>\n            ) : (\n              <p className=\"FieldToChange\">Mã số sinh viên: </p>\n            )}\n            <div className=\"Field2\">\n              <Input\n                name=\"ConstID\"\n                id=\"ConstID\"\n                type=\"text\"\n                value={username}\n                disabled\n                style={{\n                  width: '400px',\n                  height: '55px',\n                  backgroundColor: '#404E68',\n                  color: 'white',\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"line\">\n          <div className=\"Major\">\n            <p className=\"FieldToChange\">Chuyên ngành: </p>\n            <div className=\"Field2\">\n              <Input\n                name=\"Major\"\n                id=\"Major\"\n                type=\"text\"\n                style={{ width: '400px', height: '55px;' }}\n                value={fieldOfStudy}\n                onChange={handleFieldOfStudy}\n              />\n            </div>\n          </div>\n          <div className=\"Phone\">\n            <p className=\"FieldToChange\">\n              Số điện thoại:\n              {phoneErrorMessage && (\n                <ErrorMessage>{phoneErrorMessage}</ErrorMessage>\n              )}\n            </p>\n            <div className=\"Field2\">\n              <Input\n                name=\"Phone\"\n                id=\"Phone\"\n                type=\"tel\"\n                style={{ width: '400px', height: '55px;' }}\n                value={phone}\n                onChange={handlePhone}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"desc\">\n          <div>\n            <p className=\"FieldToChange\">Giới thiệu: </p>\n            <div className=\"Field1\">\n              <Textarea\n                type=\"textarea\"\n                name=\"Description\"\n                id=\"Description\"\n                style={{\n                  width: '100%',\n                  height: '140px',\n                }}\n                value={introduction}\n                onChange={handleIntroduction}\n              ></Textarea>\n            </div>\n          </div>\n        </div>\n        {successMessage &&\n          (successMessage === 'Cập nhật thông tin thành công' ? (\n            <SuccessMessage style={{ color: 'blue' }}>\n              {successMessage}\n            </SuccessMessage>\n          ) : (\n            <SuccessMessage style={{ color: 'red' }}>\n              {successMessage}\n            </SuccessMessage>\n          ))}\n        <div className=\"wrapper\">\n          <Button\n            id=\"cancel\"\n            onClick={(e) => {\n              if (role === 'Student') {\n                history.push('/studentHomepage');\n              } else if (role === 'Teacher') {\n                history.push('/teacherHomepage');\n              }\n              e.preventDefault();\n            }}\n          >\n            <p className=\"Cancel\">Hủy</p>\n          </Button>\n          <Button id=\"submit\" onClick={handleSubmit}>\n            <p className=\"Submit\">Cập nhật</p>\n          </Button>\n        </div>\n      </Container>\n      {role === 'Teacher' ? <Sidebar /> : <SidebarStudent />}\n    </Wrapper>\n  );\n}\nconst SuccessMessage = styled.p`\n  text-align: center;\n  font-size: 22px;\n  margin: 0;\n`;\nconst ErrorMessage = styled.span`\n  text-align: center;\n  font-size: 18px;\n  color: red;\n`;\nconst Textarea = styled.textarea`\n  width: 100%;\n  border: 1px solid #cddedf;\n  box-sizing: border-box;\n  border-radius: 5px;\n  background-color: #ffffff;\n  font-size: 20px;\n  transition-timing-function: ease-in-out;\n  padding: 10px 10px;\n  margin: 0px 0px;\n  &:active {\n    border: 1px solid #0ba1f5;\n  }\n`;\nconst Red = styled.span`\n  color: red;\n  margin-left: 0px;\n`;\nconst Wrapper = styled.div`\n  background-color: #f4f5fa;\n`;\nconst Container = styled.div`\n  width: 1100px;\n  margin: auto;\n  margin-top: 50px;\n  h1 {\n    font-size: 40px;\n    font-weight: bold;\n    letter-spacing: 0.3px;\n    text-align: center;\n    margin: 0px 0px 0px 0px;\n  }\n  div {\n    font-family: Mulish;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 22px;\n    line-height: 28px;\n    display: flex;\n    align-items: left;\n    letter-spacing: 0.3px;\n  }\n  div > div {\n    position: relative;\n    flex-direction: column;\n    margin: 0px 50px;\n  }\n  div > div > div {\n    position: relative;\n    flex-direction: row;\n    margin: 0px 0px;\n  }\n  div > div > .FieldToChange {\n    position: left;\n    line-height: 28px;\n    width: 450px;\n  }\n\n  .line {\n    margin: 50px 0px 50px 0px;\n  }\n  .desc {\n    margin: 50px 0px 50px 0px;\n  }\n  .wrapper {\n    width: 90%;\n    margin: 10px 0px 10px 0px;\n    display: flex;\n    justify-content: flex-end;\n  }\n  .Field {\n    background: #ffffff;\n    border: 1px solid #cddedf;\n    box-sizing: border-box;\n    border-radius: 5px;\n  }\n  .Field1 {\n    width: 900px;\n    height: 140px;\n  }\n  .Field2 {\n    width: 400px;\n    height: 55px;\n  }\n\n  .Submit {\n    margin: 0px 0px;\n    width: 180px;\n    height: 50px;\n    border-radius: 8px;\n    line-height: 50px;\n    background: #30c563;\n    &:hover {\n      color: rgb(51, 255, 119);\n    }\n  }\n  .Cancel {\n    margin: 0px 0px;\n    width: 180px;\n    height: 50px;\n    border-radius: 8px;\n    line-height: 50px;\n    background: #e85656;\n    &:hover {\n      color: rgb(255, 127, 127);\n    }\n  }\n  #Day,\n  #Month,\n  #Year,\n  .Slash {\n    margin: 0px 16px 0px 0px;\n  }\n  .Slash {\n    font-family: Mulish;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 60px;\n    line-height: 55px;\n  }\n`;\n\nconst Input = styled.input`\n  border: 1px solid #cddedf;\n  box-sizing: border-box;\n  border-radius: 5px;\n  background-color: #ffffff;\n  font-size: 20px;\n  transition-timing-function: ease-in-out;\n  padding: 10px 10px;\n  margin: 0px 0px;\n  &:active {\n    border: 1px solid #0ba1f5;\n  }\n`;\n\nconst Button = styled.button`\n  margin-right: 40px;\n  width: 184px;\n  height: 54px;\n  font-family: Mulish;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 25px;\n  border-radius: 10px;\n  border-style: none;\n  color: #ffffff;\n`;\n\nexport default ChangeInfoTeacher;\n","/home/thainguyen/Source/uet-smta-test/src/NavigationMenu/ChangePass/ChangePass.js",["254"],"import React from 'react';\nimport Header from './Header';\nimport Body from './Body';\nimport './ChangePass.css';\nimport { Container } from '../../HomePage/TeacherHomePage';\nimport NavigationBar from '../../HomePage/components/NavigationBar';\n\nconst ChangePass = () => {\n  return (\n    <>\n      <Container style={{ height: '100vh' }}>\n        {/* <Header></Header> */}\n        <NavigationBar />\n        <Body></Body>\n      </Container>\n    </>\n  );\n};\nexport default ChangePass;\n","/home/thainguyen/Source/uet-smta-test/src/Lists/StudentClassList/ClassList.js",["255"],"import React from 'react';\nimport SidebarStudent from '../../HomePage/components/SidebarStudent';\nimport NavigationBar from '../../HomePage/components/NavigationBar';\nimport { Container } from '../../HomePage/TeacherHomePage';\nimport Footer from '../../HomePage/components/Footer';\nimport Table from './Table';\nconst ClassList = () => {\n  return (\n    <>\n      <NavigationBar />\n      <Table />\n      <SidebarStudent />\n      <Footer />\n    </>\n  );\n};\nexport default ClassList;\n","/home/thainguyen/Source/uet-smta-test/src/messenger/Messenger.jsx",["256"],"import \"./messenger.css\";\nimport Conversation from \"./components/conversations/Conversation\";\nimport Message from \"./components/message/Message\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport NavigationBar from '../HomePage/components/NavigationBar';\nimport Sidebar from '../HomePage/components/Sidebar';\nimport SidebarStudent from '../HomePage/components/SidebarStudent';\n\nexport default function Messenger() {\n  \n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const socket = useRef();\n  const { user } = useContext(AuthContext);\n  const scrollRef = useRef();\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", (data) => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now(),\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    arrivalMessage &&\n      currentChat?.members.includes(arrivalMessage.sender) &&\n      setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user.username);\n    socket.current.on(\"getUsers\", (users) => {\n      setOnlineUsers(\n       // user.followings.filter((f) => users.some((u) => u.userId === f))\n      );\n    });\n  }, [user]);\n  \n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + user.username);\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getConversations();\n  }, [user.username]);\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + currentChat?._id);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const message = {\n      sender: user.username,\n      text: newMessage,\n      conversationId: currentChat._id,\n    };\n    console.log(\"chat +\", user);\n    const receiverId = currentChat.members.find(\n      (member) => member !== user.username\n    );\n\n    socket.current.emit(\"sendMessage\", {\n      senderId: user.username,\n      receiverId,\n      text: newMessage,\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const role = JSON.parse(sessionStorage.getItem('user'))\n     ? JSON.parse(sessionStorage.getItem('user')).role\n     : '';\n\n  return (\n    <>\n      <NavigationBar />\n      <div className=\"messenger\">\n        <div className=\"chatMenu\">\n          <div className=\"chatMenuWrapper\">\n            {conversations.map((c) => (\n              <div onClick={() => setCurrentChat(c)}>\n                <Conversation conversation={c} currentUser={user} />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"chatBox\">\n          <div className=\"chatBoxWrapper\">\n            {currentChat ? (\n              <>\n                <div className=\"chatBoxTop\">\n                  {messages.map((m) => (\n                    <div ref={scrollRef}>\n                      <Message message={m} own={m.sender === user.username} />\n                    </div>\n                  ))}\n                </div>\n                <div className=\"chatBoxBottom\">\n                  <textarea\n                    className=\"chatMessageInput\"\n                    placeholder=\"write something...\"\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    value={newMessage}\n                  ></textarea>\n                  <button className=\"chatSubmitButton\" onClick={handleSubmit}>\n                    Gửi\n                  </button>\n                </div>\n              </>\n            ) : (\n              <span className=\"noConversationText\">\n                Hãy bắt đầu một cuộc hội thoại!\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n      {role === 'Teacher' ? <Sidebar/> : <SidebarStudent/>}\n    </>\n  );\n}\n","/home/thainguyen/Source/uet-smta-test/src/SignInPage/Header.js",[],"/home/thainguyen/Source/uet-smta-test/src/SignInPage/Body.js",[],"/home/thainguyen/Source/uet-smta-test/src/SignInPage/Footer.js",[],"/home/thainguyen/Source/uet-smta-test/src/Dashboard/BarChart.js",[],"/home/thainguyen/Source/uet-smta-test/src/Dashboard/PieChart.js",[],"/home/thainguyen/Source/uet-smta-test/src/Dashboard/ClassesDropDown.js",["257"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst ClassesDropDown = ({ setSelectedClassID }) => {\n  const [classList, setClassList] = useState([]);\n  const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/classes/${username}/show`)\n      .then((res) => {\n        setClassList(\n          res.data.map((item) => {\n            return {\n              classId: item.classId,\n              className: item.className,\n            };\n          })\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    <>\n      <select\n        id=\"dropDownClass\"\n        style={{\n          marginLeft: '10px',\n          padding: '5px 17px',\n          backgroundColor: '#404E68',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n        }}\n        onChange={(e) => {\n          const classData = classList.filter((item) => {\n            return item.className === e.target.value;\n          });\n          setSelectedClassID(classData[0].classId);\n        }}\n      >\n        <option value=\"\" selected disabled hidden>\n          Chọn lớp\n        </option>\n        {classList.map((item) => {\n          return (\n            <option key={item.classId} value={item.className}>\n              {item.className}\n            </option>\n          );\n        })}\n      </select>\n    </>\n  );\n};\n\nexport default ClassesDropDown;\n","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/NavigationBar.js",["258"],"import React, { useState, useEffect } from 'react';\nimport * as IoIcons from 'react-icons/io';\n\nimport './NavigationBar.css';\nimport boy from '../../assets/boy_ava.png';\nimport DropdownAva from './DropdownAva';\nimport DropNotification from './DropNotification';\nimport axios from 'axios';\n\nfunction NavigationBar() {\n  const name = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).name\n    : 'Anonymous';\n  const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n  const [dropdown, setDropdown] = useState(false);\n  const [showNoti, setShowNoti] = useState(false);\n  const [notificationList, setNotificationList] = useState([]);\n  const showDropdown = () => {\n    setDropdown(!dropdown);\n    setShowNoti(false);\n  };\n  const showNotification = () => {\n    setDropdown(false);\n    setShowNoti(!showNoti);\n  };\n  useEffect(() => {\n    if (showNoti) {\n      axios\n        .get(`/notifications/show/${username}`)\n        .then((res) => {\n          console.log(res.data);\n          setNotificationList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [showNoti]);\n  return (\n    <div className=\"navigationbar\">\n      <div className=\"profile\">\n        <IoIcons.IoMdNotifications\n          onClick={showNotification}\n          style={{ color: '#404E68', cursor: 'pointer' }}\n          size={30}\n        />\n        {showNoti && (\n          <DropNotification\n            notificationList={notificationList}\n            setNotificationList={setNotificationList}\n          />\n        )}\n        <span className=\"profile-text\">{name}</span>\n        <div onClick={showDropdown}>\n          <img className=\"avatar\" alt={'Avatar'} src={boy} />\n          {dropdown && <DropdownAva />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NavigationBar;\n","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/SidebarStudent.js",[],"/home/thainguyen/Source/uet-smta-test/src/HomePage/components/Sidebar.js",[],"/home/thainguyen/Source/uet-smta-test/src/HomePage/components/Footer.js",[],"/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfClasses/Table.js",["259"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport { useHistory } from 'react-router-dom';\nconst Table = () => {\n  const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const filterData = {\n    delay: 100,\n    style: {\n      border: 'none',\n      paddingLeft: 0,\n      margin: 0,\n    },\n    placeholder: 'Tìm kiếm',\n  };\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/classes/${username}/show`)\n      .then((res) => {\n        setData(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  const columns = [\n    {\n      dataField: 'classId',\n      text: 'ID',\n      hidden: true,\n      filter: textFilter(filterData),\n    },\n    {\n      dataField: 'className',\n      text: 'Tên lớp',\n      filter: textFilter(filterData),\n    },\n    {\n      dataField: 'classType',\n      text: 'Lớp',\n      filter: textFilter(filterData),\n      style: (cell, row, rowIndex, colIndex) => {\n        if (row.classType === 'Thường') {\n          return {\n            color: '#DF9941',\n          };\n        } else if (row.classType === 'CLC') {\n          return {\n            color: '#E4636F',\n          };\n        } else if (row.classType === 'CLCTT23') {\n          return {\n            color: '#7FC008',\n          };\n        }\n      },\n    },\n    {\n      dataField: 'quantity',\n      text: 'Sĩ số',\n      filter: textFilter(filterData),\n    },\n    {\n      dataField: 'leader',\n      text: 'Cán bộ lớp',\n      filter: textFilter(filterData),\n    },\n  ];\n  const rowEvents = {\n    onClick: (e, row, rowIndex) => {\n      sessionStorage.setItem(\n        'TableInfo',\n        JSON.stringify({\n          classId: row.classId,\n          className: row.className,\n        })\n      );\n      history.push('/teacherHomepage/classList/studentList');\n    },\n  };\n  return (\n    <>\n      <h1 className=\"class-name\" style={{ marginBottom: '60px' }}>\n        Danh sách lớp\n      </h1>\n      <BootstrapTable\n        bootstrap4\n        keyField=\"classId\"\n        data={data}\n        columns={columns}\n        hover\n        bordered={true}\n        filter={filterFactory()}\n        noDataIndication=\"Không có lớp\"\n        rowEvents={rowEvents}\n      />\n    </>\n  );\n};\n\nexport default Table;\n","/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfStudents/Table.js",["260","261","262","263","264"],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nimport './ListOfStudents.css';\nimport ClassName from './ClassName';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport FilterButton from '../Filters/FilterButton';\nimport AddStudentButton from './AddStudentButton';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport SaveIcon from '@mui/icons-material/Save';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport Fab from '@mui/material/Fab';\nimport SpecificFilterButton from '../Filters/SpecificFilterButton';\nimport FileInput from '../FileInput/FileInput';\nimport FileExport from '../FileExport/FileExport';\nconst Table = () => {\n  const [userList, setUserList] = useState([]);\n  const [deletedRows, setDeletedRows] = useState([]);\n  const [editedRows, setEditedRows] = useState([]);\n  const getUniqueListBy = (arr, key) => {\n    return [...new Map(arr.map((item) => [item[key], item])).values()];\n  };\n  console.log(userList);\n  const filterData = {\n    delay: 100,\n    style: {\n      border: 'none',\n      paddingLeft: 0,\n      margin: 0,\n    },\n    placeholder: 'Tìm kiếm',\n  };\n  const columns = [\n    {\n      dataField: 'name',\n      text: 'Họ và tên',\n      sort: true,\n      filter: textFilter(filterData),\n      editable: false,\n    },\n    {\n      dataField: 'username',\n      text: 'MSSV',\n      sort: true,\n      filter: textFilter(filterData),\n    },\n    {\n      dataField: 'dateOfBirth',\n      text: 'Ngày sinh',\n      sort: true,\n      filter: textFilter(filterData),\n      formatter: (cell) => {\n        let date = cell;\n        if (typeof cell !== 'object') {\n          date = new Date(cell);\n        }\n        let day = date.getUTCDate();\n        let month = date.getUTCMonth() + 1;\n        let year = date.getFullYear();\n\n        month = (month > 9 ? '' : '0') + month;\n        day = (day > 9 ? '' : '0') + day;\n\n        return `${year}-${month}-${day}`;\n      },\n      // editor: {\n      //   type: Type.DATE,\n      // },\n      editable: false,\n    },\n    // {\n    //   dataField: 'gender',\n    //   text: 'Giới tính',\n    //   sort: true,\n    //   filter: textFilter(filterData),\n    //   editor: {\n    //     type: Type.SELECT,\n    //     options: [\n    //       {\n    //         value: 'Nam',\n    //         label: 'Nam',\n    //       },\n    //       {\n    //         value: 'Nữ',\n    //         label: 'Nữ',\n    //       },\n    //     ],\n    //   },\n    // },\n    {\n      dataField: 'email',\n      text: 'Email',\n      sort: true,\n      filter: textFilter(filterData),\n      editable: false,\n    },\n    {\n      dataField: 'phoneNumber',\n      text: 'Số điện thoại',\n      sort: true,\n      filter: textFilter(filterData),\n      editable: false,\n      validator: (newValue, row, column) => {\n        if (/[a-zA-Z]/g.test(newValue) || newValue.length != 10) {\n          return {\n            valid: false,\n            message: 'Số điện thoại không hợp lệ',\n          };\n        }\n        return true;\n      },\n    },\n    {\n      dataField: 'parentPhoneNumber',\n      text: 'Số điện thoại PH',\n      sort: true,\n      filter: textFilter(filterData),\n      editable: false,\n      validator: (newValue, row, column) => {\n        if (/[a-zA-Z]/g.test(newValue) || newValue.length != 10) {\n          return {\n            valid: false,\n            message: 'Số điện thoại không hợp lệ',\n          };\n        }\n        return true;\n      },\n    },\n    {\n      dataField: 'gpa',\n      text: 'GPA',\n      sort: true,\n      filter: textFilter(filterData),\n      validator: (newValue, row, column) => {\n        if (newValue.length <= 0) {\n          return {\n            valid: false,\n            message: 'GPA không được để trống',\n          };\n        }\n        if (isNaN(newValue)) {\n          return {\n            valid: false,\n            message: 'Vui lòng điền giá trị giữa 0 và 4',\n          };\n        }\n        if (newValue < 0 || newValue > 4) {\n          return {\n            valid: false,\n            message: 'Vui lòng điền giá trị giữa 0 và 4',\n          };\n        }\n        return true;\n      },\n    },\n    {\n      dataField: 'drl',\n      text: 'ĐRL',\n      sort: true,\n      filter: textFilter(filterData),\n      validator: (newValue, row, column) => {\n        if (newValue.length <= 0) {\n          return {\n            valid: false,\n            message: 'ĐRL không được để trống',\n          };\n        }\n        if (isNaN(newValue)) {\n          return {\n            valid: false,\n            message: 'Vui lòng điền giá trị giữa 0 và 100',\n          };\n        }\n        if (newValue < 0 || newValue > 100) {\n          return {\n            valid: false,\n            message: 'Vui lòng điền giá trị giữa 0 và 100',\n          };\n        }\n        return true;\n      },\n    },\n  ];\n  const pagination = paginationFactory({\n    page: 1,\n    sizePerPage: 10,\n    lastPageText: '>>',\n    firstPageText: '<<',\n    nextPageText: '>',\n    prevPageText: '<',\n    alwaysShowAllBtns: true,\n    sizePerPageList: [\n      {\n        text: '10',\n        value: 10,\n      },\n      {\n        text: '20',\n        value: 20,\n      },\n      {\n        text: '30',\n        value: 30,\n      },\n      {\n        text: 'All',\n        value: userList.length,\n      },\n    ],\n  });\n  const selectRow = {\n    mode: 'checkbox',\n    selectionRenderer: ({ mode, ...rest }) => <input type={mode} {...rest} />,\n    selectColumnPosition: 'right',\n    style: { backgroundColor: '#c8e6c9' },\n    headerColumnStyle: {\n      textAlign: 'center',\n    },\n    onSelect: (row, isSelect, rowIndex, e) => {\n      if (isSelect) {\n        setDeletedRows([...deletedRows, row.username]);\n      } else {\n        setDeletedRows(deletedRows.filter((item) => item !== row.username));\n      }\n    },\n    onSelectAll: (isSelect, rows, e) => {\n      if (isSelect) {\n        setDeletedRows(rows.map((item) => item.username));\n      } else {\n        setDeletedRows([]);\n      }\n    },\n  };\n  const classId = JSON.parse(sessionStorage.getItem('TableInfo'))\n    ? JSON.parse(sessionStorage.getItem('TableInfo')).classId\n    : '';\n  const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n  const classNameTable = JSON.parse(sessionStorage.getItem('TableInfo'))\n    ? JSON.parse(sessionStorage.getItem('TableInfo')).className\n    : 'Loading...';\n  useEffect(() => {\n    axios\n      .post(`http://localhost:5000/api/classes/students`, null, {\n        params: {\n          class_id: classId,\n          role: 'Teacher',\n          user_id: username,\n        },\n      })\n      .then((res) => {\n        setUserList(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  const handleSaveAction = (e) => {\n    const req = {\n      removed: deletedRows,\n      edited: getUniqueListBy(editedRows, 'username'),\n    };\n    axios\n      .post(`http://localhost:5000/api/classes/${classId}/update`, req)\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => console.log(err));\n    e.preventDefault();\n  };\n  const handleDeleteAction = (e) => {\n    setUserList(\n      userList.filter((item) => !deletedRows.includes(item.username))\n    );\n    e.preventDefault();\n  };\n  const handleCancelAction = (e) => {\n    axios\n      .post(`http://localhost:5000/api/classes/students`, null, {\n        params: {\n          class_id: classId,\n          role: 'Teacher',\n          user_id: username,\n        },\n      })\n      .then((res) => {\n        setUserList(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    e.preventDefault();\n  };\n  return (\n    <>\n      <Stack spacing={1} direction=\"row\">\n        <SpecificFilterButton setData={setUserList} />\n        <AddStudentButton data={userList} setData={setUserList} />\n        <Fab aria-label=\"delete\" size=\"medium\" onClick={handleDeleteAction}>\n          <DeleteOutlineIcon />\n        </Fab>\n      </Stack>\n      <ClassName>{classNameTable}</ClassName>\n      <div className=\"filter\">\n        <FilterButton setData={setUserList} />\n      </div>\n      <BootstrapTable\n        bootstrap4\n        hover={true}\n        keyField=\"username\"\n        columns={columns}\n        data={userList}\n        pagination={pagination}\n        filter={filterFactory()}\n        noDataIndication=\"Không có sinh viên\"\n        selectRow={selectRow}\n        bordered={true}\n        cellEdit={cellEditFactory({\n          mode: 'click',\n          blurToSave: true,\n          autoSelectText: true,\n          afterSaveCell: (oldValue, newValue, row, column) => {\n            if (oldValue != newValue) {\n              setEditedRows([...editedRows, row]);\n            }\n          },\n        })}\n      />\n      <div className=\"ioFile\">\n        <div className=\"FileIn\">\n          <FileInput setData={setUserList} />\n        </div>\n        <div className=\"FileOut\">\n          <FileExport data={userList} />\n        </div>\n      </div>\n      <div className=\"saveButton\">\n        <Stack spacing={3} direction=\"row\">\n          <Button\n            variant=\"contained\"\n            onClick={handleCancelAction}\n            color=\"error\"\n            startIcon={<ClearIcon />}\n          >\n            Hủy\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={handleSaveAction}\n            color=\"success\"\n            startIcon={<SaveIcon />}\n          >\n            Lưu\n          </Button>\n        </Stack>\n      </div>\n    </>\n  );\n};\nexport default Table;\n","/home/thainguyen/Source/uet-smta-test/src/NavigationMenu/ChangePass/Header.js",[],"/home/thainguyen/Source/uet-smta-test/src/Lists/StudentClassList/Table.js",["265"],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport ClassName from './ClassName';\nconst Table = () => {\n  const [data, setData] = useState([]);\n  const [className, setClassName] = useState('');\n  const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n  const columns = [\n    {\n      dataField: 'name',\n      text: 'Họ và tên',\n    },\n    {\n      dataField: 'username',\n      text: 'MSSV',\n    },\n    {\n      dataField: 'level',\n      text: 'Chức vụ',\n      style: (cell, row, rowIndex, colIndex) => {\n        if (row.level === 'Thành viên') {\n          return {\n            color: '#DF9941',\n          };\n        } else if (row.level === 'Bí thư') {\n          return {\n            color: '#E4636F',\n          };\n        } else if (row.level === 'Lớp trưởng') {\n          return {\n            color: '#7FC008',\n          };\n        }\n      },\n    },\n    {\n      dataField: 'dateOfBirth',\n      text: 'Ngày sinh',\n      formatter: (cell) => {\n        let date = cell;\n        if (typeof cell !== 'object') {\n          date = new Date(cell);\n        }\n        let day = date.getUTCDate();\n        let month = date.getUTCMonth() + 1;\n        let year = date.getFullYear();\n\n        month = (month > 9 ? '' : '0') + month;\n        day = (day > 9 ? '' : '0') + day;\n\n        return `${year}-${month}-${day}`;\n      },\n    },\n    {\n      dataField: 'gender',\n      text: 'Giới tính',\n    },\n    {\n      dataField: 'phoneNumber',\n      text: 'Số điện thoại',\n    },\n  ];\n  const pagination = paginationFactory({\n    page: 1,\n    sizePerPage: 10,\n    lastPageText: '>>',\n    firstPageText: '<<',\n    nextPageText: '>',\n    prevPageText: '<',\n    alwaysShowAllBtns: true,\n    sizePerPageList: [\n      {\n        text: '10',\n        value: 10,\n      },\n      {\n        text: '20',\n        value: 20,\n      },\n      {\n        text: '30',\n        value: 30,\n      },\n      {\n        text: 'All',\n        value: data.length,\n      },\n    ],\n  });\n  useEffect(() => {\n    axios\n      .post(`http://localhost:5000/api/classes/students`, null, {\n        params: {\n          role: 'Student',\n          user_id: username,\n        },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setData(res.data.filter((item) => !item.className));\n        setClassName(res.data[res.data.length - 1].className);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    <>\n      <ClassName>{className}</ClassName>\n      <BootstrapTable\n        bootstrap4\n        hover={true}\n        keyField=\"username\"\n        columns={columns}\n        data={data}\n        pagination={pagination}\n        noDataIndication=\"Không có sinh viên\"\n        bordered={true}\n      />\n    </>\n  );\n};\nexport default Table;\n","/home/thainguyen/Source/uet-smta-test/src/NavigationMenu/ChangePass/Body.js",[],"/home/thainguyen/Source/uet-smta-test/src/Forum/Posts/ModalBtn.js",["266","267"],"import React, { useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { TextField } from '@mui/material';\nimport './Modal.css';\nimport axios from 'axios';\n\nconst boxStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 900,\n  height: 600,\n  bgcolor: '#F4F5FA',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nfunction postBtn({ btnName, handleClickOpen }) {\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n      {btnName}\n    </Button>\n  );\n}\n\nfunction editBtn({ handleClickOpen }) {\n  return (\n    <IconButton color=\"default\" aria-label=\"edit\" onClick={handleClickOpen}>\n      <EditIcon />\n    </IconButton>\n  );\n}\n\nfunction ModalBtn({\n  btnName,\n  title,\n  submitBtn,\n  headingText,\n  contentText,\n  setHeadingText,\n  setContentText,\n  setPosts,\n  posts,\n  edit = false,\n  post,\n}) {\n  const [open, setOpen] = React.useState(false);\n  const [addErrorMessage, setAddErrorMessage] = useState(false);\n  const [editErrorMessage, setEditErrorMessage] = useState(false);\n  const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n  const name = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).name\n    : '';\n  const [textEdit, setTextEdit] = useState({\n    headingText: '',\n    contentText: '',\n  });\n  useEffect(() => {\n    if (edit) {\n      axios\n        .get(`/posts/show/${post.id}`)\n        .then((res) => {\n          setTextEdit({\n            headingText: res.data.title,\n            contentText: res.data.content,\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, []);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    if (!edit) {\n      setHeadingText('');\n      setContentText('');\n      setAddErrorMessage(false);\n    } else {\n      axios\n        .get(`/posts/show/${post.id}`)\n        .then((res) => {\n          setTextEdit({\n            headingText: res.data.title,\n            contentText: res.data.content,\n          });\n        })\n        .catch((err) => console.log(err));\n      setEditErrorMessage(false);\n    }\n  };\n  const handleHeadingChange = (e) => {\n    setAddErrorMessage(false);\n    setHeadingText(e.target.value);\n  };\n  const handleContentChange = (e) => {\n    setAddErrorMessage(false);\n    setContentText(e.target.value);\n  };\n  const handleTextEditChange = (e) => {\n    setEditErrorMessage(false);\n    setTextEdit({ ...textEdit, [e.target.name]: e.target.value });\n  };\n  const handleSubmit = (e) => {\n    if (!edit) {\n      if (headingText === '' || contentText === '') {\n        setAddErrorMessage(true);\n      } else {\n        axios\n          .post(`http://localhost:5000/api/posts/create/${username}`, {\n            title: headingText,\n            content: contentText,\n          })\n          .then((res) => {\n            setPosts([\n              ...posts,\n              {\n                createdAt: res.data.createdAt,\n                id: res.data.postId,\n                owner: name,\n                ownerId: username,\n                quantityComments: res.data.commentIds.length,\n                title: headingText,\n              },\n            ]);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n        axios\n          .post(`/notifications/create/${username}?type=bài đăng`)\n          .then((res) => {\n            console.log(res.data);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n        handleClose();\n      }\n    } else {\n      if (textEdit.headingText === '' || textEdit.contentText === '') {\n        setEditErrorMessage(true);\n      } else {\n        axios\n          .post(`/posts/update/${post.id}`, {\n            title: textEdit.headingText,\n            content: textEdit.contentText,\n          })\n          .then((res) => {\n            setPosts([\n              ...posts.filter((p) => p.id !== post.id),\n              {\n                createdAt: post.createdAt,\n                id: post.id,\n                owner: name,\n                ownerId: username,\n                quantityComments: post.quantityComments,\n                title: textEdit.headingText,\n              },\n            ]);\n          })\n          .catch((err) => console.log(err));\n        setOpen(false);\n      }\n    }\n    e.preventDefault();\n  };\n  return (\n    <div>\n      {edit\n        ? editBtn({ handleClickOpen: handleClickOpen })\n        : postBtn({ btnName: btnName, handleClickOpen })}\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={boxStyle}>\n          {/* Move typography to center of Box */}\n          <Typography\n            variant=\"h4\"\n            id=\"modal-modal-title\"\n            align=\"center\"\n            sx={{ mb: 2.5 }}\n          >\n            {title}\n          </Typography>\n\n          {!edit ? (\n            <>\n              <TextField\n                required\n                id=\"filled-basic\"\n                label=\"Tiêu đề\"\n                variant=\"filled\"\n                defaultValue={headingText}\n                fullWidth\n                sx={{ mb: 2.5 }}\n                inputProps={{ maxLength: 80 }}\n                onChange={handleHeadingChange}\n              />\n\n              <TextField\n                required\n                id=\"filled-basic\"\n                label=\"Nội dung\"\n                variant=\"filled\"\n                defaultValue={contentText}\n                rows={12}\n                fullWidth\n                multiline\n                onChange={handleContentChange}\n              />\n            </>\n          ) : (\n            <>\n              <TextField\n                required\n                id=\"filled-basic\"\n                label=\"Tiêu đề\"\n                variant=\"filled\"\n                defaultValue={textEdit.headingText}\n                fullWidth\n                sx={{ mb: 2.5 }}\n                inputProps={{ maxLength: 80 }}\n                name=\"headingText\"\n                onChange={handleTextEditChange}\n              />\n\n              <TextField\n                required\n                id=\"filled-basic\"\n                label=\"Nội dung\"\n                variant=\"filled\"\n                defaultValue={textEdit.contentText}\n                rows={12}\n                fullWidth\n                multiline\n                name=\"contentText\"\n                onChange={handleTextEditChange}\n              />\n            </>\n          )}\n\n          <div className=\"btn-forum\">\n            {edit && editErrorMessage && (\n              <p style={{ margin: '0px 70px 0px 0px', color: 'red' }}>\n                Vui lòng điền đầy đủ thông tin\n              </p>\n            )}\n            {!edit && addErrorMessage && (\n              <p style={{ margin: '0px 70px 0px 0px', color: 'red' }}>\n                Vui lòng điền đầy đủ thông tin\n              </p>\n            )}\n            <Button variant=\"contained\" color=\"error\" onClick={handleClose}>\n              Hủy\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{ ml: 4 }}\n              onClick={handleSubmit}\n            >\n              {submitBtn}\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\nexport default ModalBtn;\n","/home/thainguyen/Source/uet-smta-test/src/Forum/components/Boxpost.jsx",["268","269","270","271","272","273","274","275"],"import \"./boxPost.css\";\nimport { format } from \"timeago.js\";\nimport ModalBtn from '../Posts/ModalBtn';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport React, {useEffect, useState} from 'react';\nimport Comment from \"../Posts/Comment\";\nimport axios from 'axios';\n//codeTT\nfunction deleteBtn({handleClickOpen}) {\n    return (\n        <IconButton\n            color=\"default\" \n            aria-label=\"delete\" \n            onClick={handleClickOpen}\n        >\n            <DeleteIcon />\n        </IconButton>\n    )\n}\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  height: 700,\n  width: 1000,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  overflowX: 'hidden',\n  overflowY: 'auto',\n};\n\nconst handleClick = (event) => {\n    console.log(\"delete\");\n}  \nfunction changeDateFormat(responseDate) {\n  var date = new Date(responseDate);\n  var min = date.getMinutes();\n  var hour = date.getHours();\n  var second = date.getSeconds();\n  var day = date.getUTCDate();\n  var month = date.getUTCMonth() + 1;\n  var year = date.getFullYear();\n\n  month = (month > 9 ? '' : '0') + month;\n  day = (day > 9 ? '' : '0') + day;\n\n  return `${year}-${month}-${day} ${hour}:${min}:${second}`;\n}\nexport default function BoxPost({post, posts, setPosts}) {\n  const [open, setOpen] = React.useState(false);\n  const [headingText, setHeadingText] = useState('');\n  const [contentText, setContentText] = useState('');\n  const [commentData, setCommentData] = useState({});\n  const [comments, setComments] = useState([]);\n   const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n    const handleOpen = () => {\n        setOpen(true)\n        axios.get(`/posts/show/${post.id}`)\n        .then(res => {\n            setCommentData(res.data);\n            setComments(res.data.comments);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    };\n    const handleClose = () => setOpen(false);\n    const handleDelete = () => {\n        axios.delete(`/posts/delete/${post.id}`)\n        .then((res) => {\n            if(posts.length > 0){\n                setPosts(posts.filter(p => p.id !== post.id));\n            }\n        })\n        .catch(err => console.log(err));\n    }\n    return (\n        <div >\n            <div>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n\n            >\n                <Box sx={style}>\n                    <Comment commentData={commentData} comments={comments} setComments={setComments}/>\n                </Box>\n            </Modal>\n            </div>\n\n        <div \n            className = \"boxPost\"\n            >\n            <div \n                className = \"feildClick\"\n                type  type = \"button\" onClick = {handleOpen}\n                > \n            <span className =\"view-number\">{post.quantityComments}</span>\n            <div className = \"postsitive-name\"> \n                <span className = \"name-text\">{post.owner}</span>\n                <span className=\"time\">. {changeDateFormat(post.createdAt)}</span>\n            </div>\n            <div >\n                <div className = \"heading-text\">{post.title}</div>\n            </div>\n            </div>\n            {username == post.ownerId &&\n                <>\n            <div className = \"penButton\">            \n                <ModalBtn \n                btnName=\"\"\n                title=\"SỬA BÀI ĐĂNG\"\n                submitBtn=\"Cập nhật\"\n                headingText={headingText}\n                contentText={contentText}\n                setHeadingText={setHeadingText}\n                setContentText={setContentText}\n                edit='true'\n                post ={post}\n                posts={posts}\n                setPosts={setPosts}\n                />\n            </div>\n            <div type = \"button\" onclick = {handleClick} >\n            <div className = \"binButton\"> <DeleteIcon \n                onClick={handleDelete}\n            /> \n            </div>\n            </div></>\n            }   \n        </div>\n        </div>\n      );\n}\n","/home/thainguyen/Source/uet-smta-test/src/messenger/components/conversations/Conversation.jsx",[],"/home/thainguyen/Source/uet-smta-test/src/messenger/components/message/Message.jsx",[],"/home/thainguyen/Source/uet-smta-test/src/SignInPage/Form.js",["276"],"import React, { useState ,useContext} from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-regular-svg-icons';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport CustomDialog from './CustomDialog';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\nimport { AuthContext } from \"../context/AuthContext\";\n\n\n\nconst Form = () => {\n  const { isFetching, dispatch } = useContext(AuthContext);\n  const [user, setUser] = useState({\n    username: '',\n    password: '',\n  });\n  let [message, setMessage] = useState('');\n  const history = useHistory();\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUser({\n      ...user,\n      [name]: value,\n    });\n    setMessage('');\n  };\n  const signIn = (e) => {\n    const { username, password } = user;\n    if (username && password) {\n      axios\n        .post('http://localhost:5000/api/auth/login', user)\n        .then((res) => {\n          if (res.data.auth === false) {\n            setMessage('Tài khoản hoặc mật khẩu không chính xác !');\n\n          } else {\n            localStorage.clear();\n            sessionStorage.setItem('user', JSON.stringify(res.data));\n                        //codeTT\n                        //console.log(res.data);\n                        dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\n            if (res.data.role === 'Student') {\n              history.push({\n                pathname: '/studentHomepage',\n              });\n            } else if (res.data.role === 'Teacher') {\n              history.push({\n                pathname: '/teacherHomepage',\n              });\n            }\n          }\n        })\n        .catch((err) => {\n          setMessage('Đăng nhập thất bại !');\n        });\n    } else {\n      setMessage('Vui lòng nhập đầy đủ thông tin !');\n    }\n    e.preventDefault();\n  };\n  return (\n    <Container>\n      <div className=\"wrapper\">\n        <h1>UET-SMTA</h1>\n        <p>UET Student Management for Teaching Assistant </p>\n        <InputField>\n          <FontAwesomeIcon icon={faUserCircle} size=\"lg\" style={iconStyle} />\n          <Input\n            type=\"text\"\n            placeholder=\"Tài khoản\"\n            name=\"username\"\n            value={user.username}\n            onChange={handleChange}\n          />\n        </InputField>\n        <InputField>\n          <FontAwesomeIcon icon={faLock} size=\"lg\" style={iconStyle} />\n          <Input\n            type=\"password\"\n            placeholder=\"Mật khẩu\"\n            name=\"password\"\n            value={user.password}\n            onChange={handleChange}\n          />\n        </InputField>\n        <div className=\"wrapper\">\n          <Button onClick={signIn}>Đăng nhập</Button>\n          <CustomDialog\n            value=\"Quên mật khẩu?\"\n            title=\"Quên mật khẩu?\"\n            type=\"span\"\n          >\n            Vui lòng liên hệ với phòng đào tạo theo số điện thoại 0123456789\n            hoặc pđt@gmail.com để được hỗ trợ.\n          </CustomDialog>\n        </div>\n      </div>\n      {message && <Message>{message}</Message>}\n    </Container>\n  );\n};\nconst iconStyle = {\n  position: 'absolute',\n  top: '20px',\n  left: '40px',\n  color: '#808180',\n};\nconst Message = styled.div`\n  text-align: center;\n  color: red;\n`;\nconst Container = styled.form`\n  h1 {\n    color: rgba(53, 115, 171, 1);\n    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    margin: 50px 58px 10px;\n    font-size: 50px;\n    font-weight: 800;\n  }\n  p {\n    color: rgb(115, 129, 143);\n    margin-bottom: 35px;\n    font-weight: 700;\n  }\n  div > .wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 35px 40px;\n  }\n  div > span {\n    color: #0ba1f5;\n    cursor: pointer;\n    text-decoration: underline;\n  }\n  div > span:hover {\n    color: red;\n  }\n`;\nconst Input = styled.input`\n  display: block;\n  padding: 18px 65px;\n  margin: 15px 10px;\n  border-radius: 30px;\n  background-color: #e6e6e6;\n  border: none;\n  font-size: 19px;\n  transition-timing-function: ease-in-out;\n  &:active {\n    border: 2px solid #0ba1f5;\n  }\n`;\nconst Button = styled.button`\n  padding: 12px 30px;\n  border-radius: 20px;\n  border: none;\n  font-size: 15px;\n  color: #f6f5f5;\n  background-image: linear-gradient(to right, #9ee7ff, #5ea4ff);\n  transition-timing-function: ease-in;\n  &:hover {\n    color: rgb(115, 129, 143);\n  }\n  cursor: pointer;\n`;\nconst InputField = styled.div`\n  position: relative;\n`;\nexport default Form;\n","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/SidebarStudentData.js",[],"/home/thainguyen/Source/uet-smta-test/src/HomePage/components/DropdownAva.js",["277"],"import React from 'react';\nimport { DropdownItems } from './DropdownItems';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport './DropdownAva.css';\n\nfunction DropdownAva() {\n    const history = useHistory();\n    return (\n        <div>\n        <ul className=\"drop-menu\">\n            {DropdownItems.map((item, index) => {\n            return (\n                <li\n                key={index}\n                className={item.cname}\n                onClick={() => {\n                    if (item.title === 'Đăng xuất') {\n                    sessionStorage.clear();\n                    }\n                    history.push(item.path);\n                }}\n                >\n                <div>\n                    {item.icon}\n                    <span> {item.title} </span>\n                </div>\n                </li>\n            );\n            })}\n        </ul>\n        </div>\n    );\n}\n\nexport default DropdownAva;\n","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/DropNotification.js",["278"],"import React, { useState } from 'react';\nimport './DropNotification.css';\nimport NotiItem from './NotiItem';\nfunction DropdownNotification({ notificationList, setNotificationList }) {\n  let cleanedNotificationList = notificationList.map((noti) => {\n    return noti.content;\n  });\n  cleanedNotificationList.reverse();\n  return (\n    <div>\n      <ul className=\"drop-noti\">\n        <li className=\"noti-header\">\n          <strong class=\"notification\">Thông báo</strong>\n        </li>\n        <div\n          style={{ maxHeight: '210px', overflowX: 'hidden', overflowY: 'auto' }}\n        >\n          {cleanedNotificationList.map((notification, index) => {\n            return (\n              <li key={index} className=\"dropnoti-link-unseen\">\n                <NotiItem info={notification} />\n              </li>\n            );\n          })}\n        </div>\n      </ul>\n    </div>\n  );\n}\n\nexport default DropdownNotification;\n","/home/thainguyen/Source/uet-smta-test/src/HomePage/components/SidebarData.js",[],"/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfStudents/ClassName.js",[],"/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfStudents/AddStudentButton.js",["279","280","281","282","283","284"],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport AddIcon from '@mui/icons-material/Add';\nimport Fab from '@mui/material/Fab';\nimport Stack from '@mui/material/Stack';\nimport MenuItem from '@mui/material/MenuItem';\nimport axios from 'axios';\nexport default function AddStudentButton({ data, setData }) {\n  const classId = JSON.parse(sessionStorage.getItem('TableInfo'))\n    ? JSON.parse(sessionStorage.getItem('TableInfo')).classId\n    : '';\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const levels = [\n    {\n      value: 'Thành viên',\n      label: 'Thành viên',\n    },\n    {\n      value: 'Lớp trưởng',\n      label: 'Lớp trưởng',\n    },\n    {\n      value: 'Bí thư',\n      label: 'Bí thư',\n    },\n  ];\n  const genders = [\n    {\n      value: 'Nam',\n      label: 'Nam',\n    },\n    {\n      value: 'Nữ',\n      label: 'Nữ',\n    },\n  ];\n  // const [level, setLevel] = React.useState('Thành viên');\n  // const [gender, setGender] = React.useState('Nam');\n  // const [hometownError, setHometownError] = React.useState(false);\n  // const [hometown, setHometown] = React.useState('Hà Nội');\n\n  const [name, setName] = React.useState('Nguyễn Văn A');\n  const [username, setUsername] = React.useState('10000000');\n  const [dateOfBirth, setDateOfBirth] = React.useState('2001-02-12');\n  const [phoneNumber, setPhoneNumber] = React.useState('0000000000');\n  const [parentPhoneNumber, setParentPhoneNumber] =\n    React.useState('0000000000');\n  const [gpa, setGpa] = React.useState(0);\n  const [drl, setDrl] = React.useState(0);\n  const [nameError, setNameError] = React.useState(false);\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [usernameIsExist, setUsernameIsExist] = React.useState(false);\n  const [phoneNumberError, setPhoneNumberError] = React.useState(false);\n  const [parentPhoneNumberError, setParentPhoneNumberError] =\n    React.useState(false);\n  const [gpaError, setGpaError] = React.useState(false);\n  const [drlError, setDrlError] = React.useState(false);\n  const handleCancel = () => {\n    // setHometownError(false);\n    // setLevel('Thành viên');\n    // setGender('Nam');\n    // setHometown('Hà Nội');\n\n    setOpen(false);\n    setNameError(false);\n    setUsernameError(false);\n    setPhoneNumberError(false);\n    setParentPhoneNumberError(false);\n    setGpaError(false);\n    setDrlError(false);\n    setUsernameIsExist(false);\n    setUsername('10000000');\n    setName('Nguyễn Văn A');\n    setDateOfBirth('2001-02-12');\n    setGpa(0);\n    setDrl(0);\n  };\n  const handleAdd = () => {\n    if (data.some((student) => student.username == username)) {\n      setUsernameIsExist(true);\n      return;\n    }\n    if (\n      // !hometownError &&\n      !nameError &&\n      !usernameError &&\n      !phoneNumberError &&\n      !parentPhoneNumberError &&\n      !gpaError &&\n      !drlError &&\n      !usernameIsExist\n    ) {\n      setOpen(false);\n      setData([\n        ...data,\n        {\n          // level,\n          // hometown,\n          // gender,\n\n          username: parseInt(username),\n          name,\n          dateOfBirth,\n          email: `${username}@vnu.edu.vn`,\n          phoneNumber,\n          parentPhoneNumber,\n          gpa: parseFloat(gpa),\n          drl: parseInt(drl),\n        },\n      ]);\n      axios\n        .post(`http://localhost:5000/api/classes/${classId}/add-student`, {\n          // level,\n          // gender,\n          // hometown,\n\n          username: parseInt(username),\n          name,\n          dateOfBirth,\n          email: `${username}@vnu.edu.vn`,\n          phoneNumber,\n          parentPhoneNumber,\n          gpa: parseFloat(gpa),\n          drl: parseInt(drl),\n        })\n        .then((res) => {\n          console.log(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      // setLevel('Thành viên');\n      // setGender('Nam');\n      // setHometown('Hà Nội');\n\n      setUsername('10000000');\n      setName('Nguyễn Văn A');\n      setDateOfBirth('2001-02-12');\n      setPhoneNumber('0000000000');\n      setParentPhoneNumber('0000000000');\n      setGpa(0);\n      setDrl(0);\n    }\n  };\n  // const handleLevelChange = (e) => {\n  //   setLevel(e.target.value);\n  // };\n  // const handleGenderChange = (e) => {\n  //   setGender(e.target.value);\n  // };\n  // const handleHometownChange = (e) => {\n  //   if (e.target.value === '') {\n  //     setHometownError(true);\n  //   } else {\n  //     setHometownError(false);\n  //   }\n  //   setHometown(e.target.value);\n  // };\n\n  const handleNameChange = (e) => {\n    if (e.target.value === '') {\n      setNameError(true);\n    } else if (/\\d/.test(e.target.value)) {\n      setNameError(true);\n    } else {\n      setNameError(false);\n    }\n    setName(e.target.value);\n  };\n  const handleUsernameChange = (e) => {\n    if (isNaN(e.target.value)) {\n      setUsernameError(true);\n    } else if (e.target.value === '') {\n      setUsernameError(true);\n    } else if (e.target.value.length !== 8) {\n      setUsernameError(true);\n    } else {\n      setUsernameError(false);\n    }\n    setUsernameIsExist(false);\n    setUsername(e.target.value);\n  };\n  const handleDateOfBirthChange = (e) => {\n    setDateOfBirth(e.target.value);\n  };\n  const handlePhoneNumberChange = (e) => {\n    let newValue = e.target.value;\n    if (/[a-zA-Z]/g.test(newValue) || newValue.length != 10) {\n      setPhoneNumberError(true);\n    } else {\n      setPhoneNumberError(false);\n    }\n    setPhoneNumber(newValue);\n  };\n  const handleParentPhoneNumberChange = (e) => {\n    let newValue = e.target.value;\n    if (/[a-zA-Z]/g.test(newValue) || newValue.length != 10) {\n      setParentPhoneNumberError(true);\n    } else {\n      setParentPhoneNumberError(false);\n    }\n    setParentPhoneNumber(newValue);\n  };\n\n  const handleGpaChange = (e) => {\n    if (e.target.value === '') {\n      setGpaError(true);\n    } else if (isNaN(e.target.value)) {\n      setGpaError(true);\n    } else if (e.target.value < 0 || e.target.value > 4) {\n      setGpaError(true);\n    } else {\n      setGpaError(false);\n    }\n    setGpa(e.target.value);\n  };\n  const handleDrlChange = (e) => {\n    if (e.target.value === '') {\n      setDrlError(true);\n    } else if (isNaN(e.target.value)) {\n      setDrlError(true);\n    } else if (e.target.value < 0 || e.target.value > 100) {\n      setDrlError(true);\n    } else {\n      setDrlError(false);\n    }\n    setDrl(e.target.value);\n  };\n  return (\n    <div>\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"medium\"\n        onClick={handleClickOpen}\n      >\n        <AddIcon />\n      </Fab>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle style={{ fontWeight: 'bold' }}>Thêm sinh viên</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Nhập thông tin sinh viên</DialogContentText>\n          <Stack direction=\"row\" spacing={3}>\n            <TextField\n              fullWidth\n              required\n              label=\"Họ và tên\"\n              variant=\"standard\"\n              value={name}\n              onChange={handleNameChange}\n              error={nameError}\n              helperText={nameError ? 'Không hợp lệ' : ''}\n            />\n            <TextField\n              fullWidth\n              required\n              label=\"MSSV\"\n              variant=\"standard\"\n              value={username}\n              onChange={handleUsernameChange}\n              error={usernameError}\n              helperText={usernameError ? 'Không hợp lệ' : ''}\n            />\n          </Stack>\n          <br />\n          <Stack direction=\"row\" spacing={3}>\n            {/* <TextField\n              fullWidth\n              variant=\"standard\"\n              select\n              label=\"Chức vụ\"\n              value={level}\n              onChange={handleLevelChange}\n            >\n              {levels.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField> */}\n            <TextField\n              type=\"date\"\n              fullWidth\n              label=\"Ngày sinh\"\n              variant=\"standard\"\n              value={dateOfBirth}\n              onChange={handleDateOfBirthChange}\n            />\n            <TextField\n              fullWidth\n              required\n              label=\"Số điện thoại\"\n              variant=\"standard\"\n              value={phoneNumber}\n              onChange={handlePhoneNumberChange}\n              error={phoneNumberError}\n              helperText={phoneNumberError ? 'Không hợp lệ' : ''}\n            />\n          </Stack>\n          <br />\n          <Stack direction=\"row\" spacing={3}>\n            <TextField\n              fullWidth\n              required\n              label=\"Số điện thoại phụ huynh\"\n              variant=\"standard\"\n              value={parentPhoneNumber}\n              onChange={handleParentPhoneNumberChange}\n              error={parentPhoneNumberError}\n              helperText={parentPhoneNumberError ? 'Không hợp lệ' : ''}\n            />\n            {/* <TextField\n              fullWidth\n              variant=\"standard\"\n              select\n              label=\"Giới tính\"\n              value={gender}\n              onChange={handleGenderChange}\n            >\n              {genders.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              fullWidth\n              label=\"Nơi sinh\"\n              variant=\"standard\"\n              value={hometown}\n              onChange={handleHometownChange}\n              error={hometownError}\n              helperText={hometownError ? 'Không hợp lệ' : ''}\n            /> */}\n            <TextField\n              fullWidth\n              label=\"GPA\"\n              variant=\"standard\"\n              value={gpa}\n              onChange={handleGpaChange}\n              error={gpaError}\n              helperText={gpaError ? 'Không hợp lệ' : ''}\n            />\n          </Stack>\n          <br />\n          <Stack direction=\"row\" spacing={3}>\n            <TextField\n              //fullWidth\n              label=\"ĐRL\"\n              variant=\"standard\"\n              value={drl}\n              onChange={handleDrlChange}\n              error={drlError}\n              helperText={drlError ? 'Không hợp lệ' : ''}\n            />\n          </Stack>\n        </DialogContent>\n        <DialogActions\n          style={{ justifyContent: 'space-evenly', alignItems: 'center' }}\n        >\n          {usernameIsExist && (\n            <p style={{ margin: '0', color: 'red' }}>MSSV đã tồn tại !</p>\n          )}\n          <div>\n            <Button onClick={handleAdd}>Thêm</Button>\n            <Button onClick={handleCancel}>Hủy</Button>\n          </div>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/home/thainguyen/Source/uet-smta-test/src/Lists/StudentClassList/ClassName.js",["285","286","287"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nconst ClassName = ({ children }) => {\n  return (\n    <h1 className=\"class-name\" style={{ marginBottom: '40px' }}>\n      {children || 'Loading...'}\n    </h1>\n  );\n};\nexport default ClassName;\n","/home/thainguyen/Source/uet-smta-test/src/Lists/FileExport/FileExport.js",["288","289"],"import React, { Component } from 'react';\nimport { CSVLink } from 'react-csv';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nconst headers = [\n  { label: 'name', key: 'name' },\n  { label: 'username', key: 'username' },\n  { label: 'dateOfBirth', key: 'dateOfBirth' },\n  { label: 'email', key: 'email' },\n  { label: 'phoneNumber', key: 'phoneNumber' },\n  { label: 'parentPhoneNumber', key: 'parentPhoneNumber' },\n  { label: 'gpa', key: 'gpa' },\n  { label: 'drl', key: 'drl' },\n];\n\nfunction FileExport({ data }) {\n  let cleanedData = data.map((student) => {\n    return {\n      name: student.name,\n      username: student.username,\n      dateOfBirth: student.dateOfBirth,\n      email: student.email,\n      phoneNumber: `'${student.phoneNumber}`,\n      parentPhoneNumber: `'${student.parentPhoneNumber}`,\n      gpa: student.gpa,\n      drl: student.drl,\n    };\n  });\n  return (\n    <div>\n      <CSVLink\n        headers={headers}\n        filename=\"DSSV.csv\"\n        data={cleanedData}\n        className=\"custom-file-download\"\n      >\n        <FontAwesomeIcon\n          icon={faDownload}\n          size=\"lg\"\n          style={{ marginRight: '10px' }}\n        />\n        Download File\n      </CSVLink>\n    </div>\n  );\n}\n\nexport default FileExport;\n","/home/thainguyen/Source/uet-smta-test/src/Lists/Filters/FilterButton.js",["290","291"],"import React, { useState } from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport axios from 'axios';\nimport './Filter.css';\nimport PopOverHover from './PopOverHover';\nimport FormControl from '@mui/material/FormControl';\nconst FilterButton = ({ setData }) => {\n  const [filterType, setFilterType] = useState('');\n\n  const classId = JSON.parse(sessionStorage.getItem('TableInfo'))\n    ? JSON.parse(sessionStorage.getItem('TableInfo')).classId\n    : '';\n  const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n\n  const handleFilterType = (e) => {\n    setFilterType(e.target.value);\n  };\n\n  function isBad(rec) {\n    if (rec.gpa < 2.0 || rec.drl < 60) {\n      return true;\n    }\n    return false;\n  }\n\n  const handleBadClick = (e) => {\n    axios\n      .post(`http://localhost:5000/api/classes/students`, null, {\n        params: {\n          class_id: classId,\n          role: 'Teacher',\n          user_id: username,\n        },\n      })\n      .then((res) => {\n        setData(res.data.filter(isBad));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    e.preventDefault();\n  };\n\n  function isGood(rec) {\n    if (rec.gpa >= 3.2 && rec.drl >= 80) {\n      return true;\n    }\n    return false;\n  }\n\n  const handleGoodClick = (e) => {\n    axios\n      .post(`http://localhost:5000/api/classes/students`, null, {\n        params: {\n          class_id: classId,\n          role: 'Teacher',\n          user_id: username,\n        },\n      })\n      .then((res) => {\n        setData(res.data.filter(isGood));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    e.preventDefault();\n  };\n  const handleFeeClick = (e) => {\n    console.log('Thiếu học phí');\n    axios\n      .post(`http://localhost:5000/api/classes/students`, null, {\n        params: {\n          class_id: classId,\n          role: 'Teacher',\n          user_id: username,\n        },\n      })\n      .then((res) => {\n        setData(res.data.filter((student) => student.tuition == true));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    e.preventDefault();\n  };\n\n  const handleCreditsClick = (e) => {\n    console.log('Thiếu tín chỉ');\n    axios\n      .post(`http://localhost:5000/api/classes/students`, null, {\n        params: {\n          class_id: classId,\n          role: 'Teacher',\n          user_id: username,\n        },\n      })\n      .then((res) => {\n        setData(res.data.filter((student) => student.credit == false));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    e.preventDefault();\n  };\n\n  const handleExpelledClick = (e) => {\n    console.log('Nguy cơ nghỉ học');\n    axios\n      .post(`http://localhost:5000/api/classes/students`, null, {\n        params: {\n          class_id: classId,\n          role: 'Teacher',\n          user_id: username,\n        },\n      })\n      .then((res) => {\n        setData(\n          res.data.filter((student) => {\n            return !student.credit && !student.tuition && isBad(student);\n          })\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 170 }}>\n        <InputLabel id=\"select-filter-label\" sx={{ marginLeft: 1.9 }}>\n          {' '}\n          Tiêu chí lọc{' '}\n        </InputLabel>\n        <Select\n          labelId=\"select-filter-label\"\n          id=\"select-filter\"\n          value={filterType}\n          label=\"Tiêu chí lọc\"\n          onChange={handleFilterType}\n        >\n          <MenuItem value={'good'} onClick={handleGoodClick}>\n            <PopOverHover tag={'good'} />\n          </MenuItem>\n\n          <MenuItem value={'bad'} onClick={handleBadClick}>\n            <PopOverHover tag={'bad'} />\n          </MenuItem>\n\n          <MenuItem value={'fee'} onClick={handleFeeClick}>\n            {'Thiếu học phí'}\n          </MenuItem>\n\n          <MenuItem value={'credits'} onClick={handleCreditsClick}>\n            {'Thiếu tín chỉ'}\n          </MenuItem>\n\n          <MenuItem value={'expelled'} onClick={handleExpelledClick}>\n            <PopOverHover tag={'expelled'} />\n          </MenuItem>\n        </Select>\n      </FormControl>\n    </>\n  );\n};\n\nexport default FilterButton;\n","/home/thainguyen/Source/uet-smta-test/src/Lists/Filters/SpecificFilterButton.js",["292"],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Fab from '@mui/material/Fab';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport SavedSearchIcon from '@mui/icons-material/SavedSearch';\nimport axios from 'axios';\nexport default function SpecificFilterButton({ setData }) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const [filterData, setFilterData] = React.useState({\n    gpaStart: 0,\n    gpaEnd: 4,\n    drlStart: 0,\n    drlEnd: 100,\n  });\n  const [error, setError] = React.useState({\n    gpaStart: false,\n    gpaEnd: false,\n    drlStart: false,\n    drlEnd: false,\n  });\n  const handleChange = (event) => {\n    setFilterData({\n      ...filterData,\n      [event.target.name]: event.target.value,\n    });\n    if (isNaN(event.target.value)) {\n      setError({\n        ...error,\n        [event.target.name]: true,\n      });\n    } else {\n      setError({\n        ...error,\n        [event.target.name]: false,\n      });\n    }\n  };\n  const handleCancel = () => {\n    setOpen(false);\n    setError({\n      gpaStart: false,\n      gpaEnd: false,\n      drlStart: false,\n      drlEnd: false,\n    });\n    setFilterData({\n      gpaStart: 0,\n      gpaEnd: 4,\n      drlStart: 0,\n      drlEnd: 100,\n    });\n  };\n  const classId = JSON.parse(sessionStorage.getItem('TableInfo'))\n    ? JSON.parse(sessionStorage.getItem('TableInfo')).classId\n    : '';\n  const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n  const handleFilter = () => {\n    if (!error.gpaStart && !error.gpaEnd && !error.drlStart && !error.drlEnd) {\n      const gpaStart =\n        filterData.gpaStart !== '' ? parseFloat(filterData.gpaStart) : 0;\n      const gpaEnd =\n        filterData.gpaEnd !== '' ? parseFloat(filterData.gpaEnd) : 4;\n      const drlStart =\n        filterData.drlStart !== '' ? parseInt(filterData.drlStart) : 0;\n      const drlEnd =\n        filterData.drlEnd !== '' ? parseInt(filterData.drlEnd) : 100;\n      axios\n        .post(`http://localhost:5000/api/classes/students`, null, {\n          params: {\n            class_id: classId,\n            role: 'Teacher',\n            user_id: username,\n          },\n        })\n        .then((res) => {\n          setData(\n            res.data.filter((student) => {\n              if (\n                student.gpa >= gpaStart &&\n                student.gpa <= gpaEnd &&\n                student.drl >= drlStart &&\n                student.drl <= drlEnd\n              ) {\n                return student;\n              }\n            })\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      setFilterData({\n        gpaStart: 0,\n        gpaEnd: 4,\n        drlStart: 0,\n        drlEnd: 100,\n      });\n      setOpen(false);\n    }\n  };\n  return (\n    <div>\n      <Fab\n        color=\"secondary\"\n        aria-label=\"delete\"\n        size=\"medium\"\n        onClick={handleClickOpen}\n      >\n        <SavedSearchIcon />\n      </Fab>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle style={{ fontWeight: 'bold' }}>\n          Lọc theo tiêu chí\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>Nhập tiêu chí cần lọc</DialogContentText>\n          <br />\n          <Stack direction=\"row\" spacing={2}>\n            <TextField\n              name=\"gpaStart\"\n              label=\"GPA start\"\n              variant=\"filled\"\n              size=\"small\"\n              value={filterData.gpaStart}\n              onChange={handleChange}\n              error={error.gpaStart}\n              helperText={error.gpaStart ? 'Giá trị không hợp lệ' : ''}\n            />\n            <Box sx={{ mx: 2, display: 'flex', alignItems: 'center' }}>to</Box>\n            <TextField\n              name=\"gpaEnd\"\n              label=\"GPA end\"\n              variant=\"filled\"\n              size=\"small\"\n              value={filterData.gpaEnd}\n              onChange={handleChange}\n              error={error.gpaEnd}\n              helperText={error.gpaEnd ? 'Giá trị không hợp lệ' : ''}\n            />\n          </Stack>\n          <br />\n          <Stack direction=\"row\" spacing={2}>\n            <TextField\n              name=\"drlStart\"\n              label=\"ĐRL start\"\n              variant=\"filled\"\n              size=\"small\"\n              value={filterData.drlStart}\n              onChange={handleChange}\n              error={error.drlStart}\n              helperText={error.drlStart ? 'Giá trị không hợp lệ' : ''}\n            />\n            <Box sx={{ mx: 2, display: 'flex', alignItems: 'center' }}>to</Box>\n            <TextField\n              name=\"drlEnd\"\n              label=\"ĐRL end\"\n              variant=\"filled\"\n              size=\"small\"\n              value={filterData.drlEnd}\n              onChange={handleChange}\n              error={error.drlEnd}\n              helperText={error.drlEnd ? 'Giá trị không hợp lệ' : ''}\n            />\n          </Stack>\n        </DialogContent>\n        <DialogActions style={{ justifyContent: 'center' }}>\n          <Button onClick={handleFilter}>Lọc</Button>\n          <Button onClick={handleCancel}>Hủy</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/home/thainguyen/Source/uet-smta-test/src/Lists/FileInput/FileInput.js",[],"/home/thainguyen/Source/uet-smta-test/src/Forum/Posts/Comment.js",["293"],"import React, { PureComponent, useState } from 'react';\nimport './Comment.css';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nfunction changeDateFormat(responseDate) {\n  var date = new Date(responseDate);\n  var min = date.getMinutes();\n  var hour = date.getHours();\n  var second = date.getSeconds();\n  var day = date.getUTCDate();\n  var month = date.getUTCMonth() + 1;\n  var year = date.getFullYear();\n\n  month = (month > 9 ? '' : '0') + month;\n  day = (day > 9 ? '' : '0') + day;\n\n  return `${year}-${month}-${day} ${hour}:${min}:${second}`;\n}\nconst Comment = ({ commentData, comments, setComments }) => {\n  const [newComment, setNewComment] = useState('');\n  const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n  const name = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).name\n    : '';\n  const handleAnswer = (e) => {\n    if (newComment.length > 0) {\n      axios\n        .post(`/comments/${commentData.id}/${username}`, {\n          content: newComment,\n        })\n        .then((res) => {\n          setNewComment('');\n          setComments([\n            ...comments,\n            {\n              content: newComment,\n              createdAt: res.data.createdAt,\n              id: res.data.commentId,\n              owner: name,\n            },\n          ]);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      axios\n        .post(`/notifications/create/${username}?type=bình luận`)\n        .then((res) => {\n          console.log(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    e.preventDefault();\n  };\n  return (\n    <div className=\"pop-up-post\">\n      <div className=\"post-content\">\n        <div className=\"post-author-and-time\">\n          <p className=\"post-of-sb\">{commentData.owner}</p>\n          <div className=\"separator\" />\n          <p className=\"time-taken\">\n            . {changeDateFormat(commentData.createdAt)}\n          </p>\n        </div>\n        <div className=\"post-header\">\n          <p>Tiêu đề: </p>\n          <div className=\"separator\" />\n          <p>{commentData.title}</p>\n        </div>\n        <hr />\n        <p className=\"post-detail\">{commentData.content}</p>\n        <hr />\n      </div>\n      <div className=\"typeComment\">\n        <input\n          type=\"text\"\n          name=\"commentDetail\"\n          id=\"commentDetail\"\n          placeholder=\"Nhập bình luận...\"\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n        />\n        <input\n          type=\"submit\"\n          value=\"Trả lời\"\n          id=\"answerCommentButton\"\n          onClick={handleAnswer}\n        />\n      </div>\n      {/* <OnlyCmt data={commentData.comments} postId={commentData.id} /> */}\n      <CommentList\n        comments={comments}\n        setComments={setComments}\n        postId={commentData.id}\n      />\n    </div>\n  );\n};\n\nexport default Comment;\n","/home/thainguyen/Source/uet-smta-test/src/SignInPage/CustomDialog.js",[],"/home/thainguyen/Source/uet-smta-test/src/HomePage/components/NotiItem.js",[],"/home/thainguyen/Source/uet-smta-test/src/Lists/Filters/PopOverHover.js",[],"/home/thainguyen/Source/uet-smta-test/src/Forum/Posts/CommentList.js",[],"/home/thainguyen/Source/uet-smta-test/src/Forum/Posts/CommentChildren.js",[],"/home/thainguyen/Source/uet-smta-test/src/HomePage/components/DropdownItems.js",[],{"ruleId":"294","severity":1,"message":"295","line":4,"column":10,"nodeType":"296","messageId":"297","endLine":4,"endColumn":19},{"ruleId":"298","severity":1,"message":"299","line":12,"column":13,"nodeType":"300","endLine":23,"endColumn":4},{"ruleId":"294","severity":1,"message":"301","line":1,"column":38,"nodeType":"296","messageId":"297","endLine":1,"endColumn":44},{"ruleId":"298","severity":1,"message":"299","line":12,"column":13,"nodeType":"300","endLine":23,"endColumn":4},{"ruleId":"294","severity":1,"message":"295","line":5,"column":10,"nodeType":"296","messageId":"297","endLine":5,"endColumn":19},{"ruleId":"294","severity":1,"message":"295","line":5,"column":10,"nodeType":"296","messageId":"297","endLine":5,"endColumn":19},{"ruleId":"294","severity":1,"message":"302","line":11,"column":7,"nodeType":"296","messageId":"297","endLine":11,"endColumn":10},{"ruleId":"294","severity":1,"message":"303","line":12,"column":7,"nodeType":"296","messageId":"297","endLine":12,"endColumn":11},{"ruleId":"294","severity":1,"message":"304","line":13,"column":7,"nodeType":"296","messageId":"297","endLine":13,"endColumn":13},{"ruleId":"298","severity":1,"message":"305","line":50,"column":6,"nodeType":"306","endLine":50,"endColumn":8,"suggestions":"307"},{"ruleId":"308","severity":1,"message":"309","line":90,"column":51,"nodeType":"310","messageId":"311","endLine":90,"endColumn":53},{"ruleId":"294","severity":1,"message":"312","line":2,"column":8,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":4,"column":10,"nodeType":"296","messageId":"297","endLine":4,"endColumn":19},{"ruleId":"294","severity":1,"message":"313","line":19,"column":10,"nodeType":"296","messageId":"297","endLine":19,"endColumn":21},{"ruleId":"298","severity":1,"message":"305","line":24,"column":6,"nodeType":"306","endLine":24,"endColumn":8,"suggestions":"314"},{"ruleId":"298","severity":1,"message":"305","line":40,"column":6,"nodeType":"306","endLine":40,"endColumn":16,"suggestions":"315"},{"ruleId":"298","severity":1,"message":"305","line":33,"column":6,"nodeType":"306","endLine":33,"endColumn":8,"suggestions":"316"},{"ruleId":"294","severity":1,"message":"317","line":11,"column":27,"nodeType":"296","messageId":"297","endLine":11,"endColumn":31},{"ruleId":"308","severity":1,"message":"309","line":113,"column":59,"nodeType":"310","messageId":"311","endLine":113,"endColumn":61},{"ruleId":"308","severity":1,"message":"309","line":129,"column":59,"nodeType":"310","messageId":"311","endLine":129,"endColumn":61},{"ruleId":"298","severity":1,"message":"318","line":267,"column":6,"nodeType":"306","endLine":267,"endColumn":8,"suggestions":"319"},{"ruleId":"308","severity":1,"message":"309","line":333,"column":26,"nodeType":"310","messageId":"311","endLine":333,"endColumn":28},{"ruleId":"298","severity":1,"message":"305","line":114,"column":6,"nodeType":"306","endLine":114,"endColumn":8,"suggestions":"320"},{"ruleId":"294","severity":1,"message":"321","line":5,"column":8,"nodeType":"296","messageId":"297","endLine":5,"endColumn":18},{"ruleId":"298","severity":1,"message":"322","line":80,"column":6,"nodeType":"306","endLine":80,"endColumn":8,"suggestions":"323"},{"ruleId":"294","severity":1,"message":"324","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":16},{"ruleId":"294","severity":1,"message":"325","line":7,"column":8,"nodeType":"296","messageId":"297","endLine":7,"endColumn":18},{"ruleId":"294","severity":1,"message":"326","line":9,"column":8,"nodeType":"296","messageId":"297","endLine":9,"endColumn":14},{"ruleId":"294","severity":1,"message":"327","line":10,"column":8,"nodeType":"296","messageId":"297","endLine":10,"endColumn":21},{"ruleId":"294","severity":1,"message":"328","line":11,"column":16,"nodeType":"296","messageId":"297","endLine":11,"endColumn":25},{"ruleId":"294","severity":1,"message":"329","line":15,"column":10,"nodeType":"296","messageId":"297","endLine":15,"endColumn":19},{"ruleId":"330","severity":1,"message":"331","line":110,"column":23,"nodeType":"332","messageId":"333","endLine":110,"endColumn":38},{"ruleId":"308","severity":1,"message":"334","line":121,"column":23,"nodeType":"310","messageId":"311","endLine":121,"endColumn":25},{"ruleId":"294","severity":1,"message":"335","line":14,"column":11,"nodeType":"296","messageId":"297","endLine":14,"endColumn":21},{"ruleId":"294","severity":1,"message":"336","line":3,"column":10,"nodeType":"296","messageId":"297","endLine":3,"endColumn":14},{"ruleId":"294","severity":1,"message":"337","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":25},{"ruleId":"294","severity":1,"message":"338","line":12,"column":8,"nodeType":"296","messageId":"297","endLine":12,"endColumn":16},{"ruleId":"294","severity":1,"message":"339","line":27,"column":9,"nodeType":"296","messageId":"297","endLine":27,"endColumn":15},{"ruleId":"294","severity":1,"message":"340","line":41,"column":9,"nodeType":"296","messageId":"297","endLine":41,"endColumn":16},{"ruleId":"308","severity":1,"message":"334","line":93,"column":49,"nodeType":"310","messageId":"311","endLine":93,"endColumn":51},{"ruleId":"308","severity":1,"message":"309","line":202,"column":55,"nodeType":"310","messageId":"311","endLine":202,"endColumn":57},{"ruleId":"308","severity":1,"message":"309","line":211,"column":55,"nodeType":"310","messageId":"311","endLine":211,"endColumn":57},{"ruleId":"294","severity":1,"message":"341","line":1,"column":8,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"337","line":2,"column":17,"nodeType":"296","messageId":"297","endLine":2,"endColumn":25},{"ruleId":"294","severity":1,"message":"328","line":2,"column":27,"nodeType":"296","messageId":"297","endLine":2,"endColumn":36},{"ruleId":"294","severity":1,"message":"342","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":26},{"ruleId":"294","severity":1,"message":"341","line":5,"column":8,"nodeType":"296","messageId":"297","endLine":5,"endColumn":13},{"ruleId":"308","severity":1,"message":"334","line":83,"column":62,"nodeType":"310","messageId":"311","endLine":83,"endColumn":64},{"ruleId":"308","severity":1,"message":"334","line":102,"column":61,"nodeType":"310","messageId":"311","endLine":102,"endColumn":63},{"ruleId":"343","severity":1,"message":"344","line":94,"column":39,"nodeType":"300","messageId":"345","endLine":94,"endColumn":41},{"ruleId":"294","severity":1,"message":"346","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":30},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useRef' is defined but never used.","'min' is assigned a value but never used.","'hour' is assigned a value but never used.","'second' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.","ArrayExpression",["347"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Header' is defined but never used.","'onlineUsers' is assigned a value but never used.",["348"],["349"],["350"],"'Type' is defined but never used.","React Hook useEffect has missing dependencies: 'classId' and 'username'. Either include them or remove the dependency array.",["351"],["352"],"'DeleteIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'edit' and 'post.id'. Either include them or remove the dependency array.",["353"],"'format' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'ModalUnstyled' is defined but never used.","'useEffect' is defined but never used.","'deleteBtn' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","Expected '===' and instead saw '=='.","'isFetching' is assigned a value but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'MenuItem' is defined but never used.","'levels' is assigned a value but never used.","'genders' is assigned a value but never used.","'axios' is defined but never used.","'Component' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'PureComponent' is defined but never used.",{"desc":"354","fix":"355"},{"desc":"354","fix":"356"},{"desc":"357","fix":"358"},{"desc":"354","fix":"359"},{"desc":"360","fix":"361"},{"desc":"354","fix":"362"},{"desc":"363","fix":"364"},"Update the dependencies array to be: [username]",{"range":"365","text":"366"},{"range":"367","text":"366"},"Update the dependencies array to be: [showNoti, username]",{"range":"368","text":"369"},{"range":"370","text":"366"},"Update the dependencies array to be: [classId, username]",{"range":"371","text":"372"},{"range":"373","text":"366"},"Update the dependencies array to be: [edit, post.id]",{"range":"374","text":"375"},[1859,1861],"[username]",[700,702],[1211,1221],"[showNoti, username]",[1054,1056],[7303,7305],"[classId, username]",[2829,2831],[2028,2030],"[edit, post.id]"]