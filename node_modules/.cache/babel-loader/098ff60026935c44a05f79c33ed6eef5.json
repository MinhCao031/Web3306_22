{"ast":null,"code":"var _jsxFileName = \"/home/thainguyen/Source/uet-smta-test/src/Lists/FileInput/FileInput.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FileInput extends Component {\n  // needInp = false;\n  // showing = () => this.needInp = !this.needInp;\n  constructor(props) {\n    super(props);\n    this.dataStringLines = [];\n    this.dataHeader = [];\n\n    this.processData = dataString => {\n      this.setState({\n        inputJson: null,\n        inpSuccess: false\n      });\n      this.dataStringLines = dataString.split(/\\r\\n|\\n/);\n      this.headers = this.dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n      const list = [];\n\n      for (let i = 1; i < this.dataStringLines.length; i++) {\n        const row = this.dataStringLines[i].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n        if (this.headers && row.length === this.headers.length) {\n          const obj = {};\n\n          for (let j = 0; j < this.headers.length; j++) {\n            let d = row[j];\n\n            if (d.length > 0) {\n              if (d[0] === '\"') d = d.substring(1, d.length - 1);\n              if (d[d.length - 1] === '\"') d = d.substring(d.length - 2, 1);\n            }\n\n            if (this.headers[j]) {\n              if (this.headers[j].length > 0) {\n                if (this.headers[j][0] === '\"') this.headers[j] = this.headers[j].substring(1, this.headers[j].length - 1);\n                if (this.headers[j][this.headers[j].length - 1] === '\"') this.headers[j] = this.headers[j].substring(this.headers[j].length - 2, 1);\n              }\n\n              obj[this.headers[j]] = d;\n            }\n          } // remove the blank rows\n\n\n          if (Object.values(obj).filter(x => x).length > 0) {\n            list.push(obj);\n          }\n        }\n      }\n\n      this.setState({\n        inputJson: list,\n        inpSuccess: 'Server not received'\n      });\n      const classId = JSON.parse(sessionStorage.getItem('TableInfo')) ? JSON.parse(sessionStorage.getItem('TableInfo')).classId : '';\n      let inpjson = this.state.inputJson;\n\n      const cleanPhoneNumber = phoneNumber => {\n        if (phoneNumber[0] === \"'\") {\n          phoneNumber = phoneNumber.substring(1, phoneNumber.length);\n        }\n\n        return phoneNumber;\n      };\n\n      inpjson = inpjson.map(student => {\n        return {\n          dateOfBirth: student.dateOfBirth,\n          drl: student.drl,\n          email: student.email,\n          gpa: student.gpa,\n          name: student.name,\n          username: student.username,\n          phoneNumber: cleanPhoneNumber(student.phoneNumber),\n          parentPhoneNumber: cleanPhoneNumber(student.parentPhoneNumber)\n        };\n      });\n      axios.post(`http://localhost:5000/api/classes/${classId}/import`, {\n        inpjson\n      }).then(res => {\n        console.log(res.data);\n        this.props.setData(res.data); // if (res.data.status == 'OK') {\n        //   this.setState({\n        //     inputJson: this.state.inputJson,\n        //     inpSuccess: 'Import successfully',\n        //   });\n        // }\n        // console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      }); // console.log(this.state.inputJson);\n      // console.log(this.state.inpSuccess);\n    };\n\n    this.showFile = async e => {\n      // inputJson = null;\n      e.preventDefault();\n      const reader = new FileReader();\n\n      reader.onload = async e => {\n        const text = e.target.result;\n        console.log(text);\n        this.processData(text);\n      };\n\n      try {\n        reader.readAsText(e.target.files[0]);\n      } catch (error) {\n        this.setState({\n          inputJson: this.state.inputJson,\n          inpSuccess: 'Import failed'\n        });\n        console.log('ERROR!!!!!');\n        console.log(error);\n      }\n    };\n\n    this.render = () => {\n      //console.log(this.props.setData());\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"file-upload\",\n          className: \"custom-file-upload\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUpload,\n            size: \"lg\",\n            style: {\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), \"Upload file\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-upload\",\n          type: \"file\",\n          onChange: e => this.showFile(e),\n          style: {\n            width: '260px',\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      inputJson: null,\n      inpSuccess: 'No file yet'\n    };\n  }\n\n}\n\nexport default FileInput;","map":{"version":3,"sources":["/home/thainguyen/Source/uet-smta-test/src/Lists/FileInput/FileInput.js"],"names":["React","Component","FontAwesomeIcon","faUpload","axios","FileInput","constructor","props","dataStringLines","dataHeader","processData","dataString","setState","inputJson","inpSuccess","split","headers","list","i","length","row","obj","j","d","substring","Object","values","filter","x","push","classId","JSON","parse","sessionStorage","getItem","inpjson","state","cleanPhoneNumber","phoneNumber","map","student","dateOfBirth","drl","email","gpa","name","username","parentPhoneNumber","post","then","res","console","log","data","setData","catch","err","showFile","e","preventDefault","reader","FileReader","onload","text","target","result","readAsText","files","error","render","marginRight","width","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nclass FileInput extends Component {\n  // needInp = false;\n  // showing = () => this.needInp = !this.needInp;\n\n  dataStringLines = [];\n  dataHeader = [];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputJson: null,\n      inpSuccess: 'No file yet',\n    };\n  }\n\n  processData = (dataString) => {\n    this.setState({ inputJson: null, inpSuccess: false });\n    this.dataStringLines = dataString.split(/\\r\\n|\\n/);\n    this.headers = this.dataStringLines[0].split(\n      /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\n    );\n    const list = [];\n    for (let i = 1; i < this.dataStringLines.length; i++) {\n      const row = this.dataStringLines[i].split(\n        /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\n      );\n      if (this.headers && row.length === this.headers.length) {\n        const obj = {};\n        for (let j = 0; j < this.headers.length; j++) {\n          let d = row[j];\n          if (d.length > 0) {\n            if (d[0] === '\"') d = d.substring(1, d.length - 1);\n            if (d[d.length - 1] === '\"') d = d.substring(d.length - 2, 1);\n          }\n          if (this.headers[j]) {\n            if (this.headers[j].length > 0) {\n              if (this.headers[j][0] === '\"')\n                this.headers[j] = this.headers[j].substring(\n                  1,\n                  this.headers[j].length - 1\n                );\n              if (this.headers[j][this.headers[j].length - 1] === '\"')\n                this.headers[j] = this.headers[j].substring(\n                  this.headers[j].length - 2,\n                  1\n                );\n            }\n            obj[this.headers[j]] = d;\n          }\n        }\n        // remove the blank rows\n        if (Object.values(obj).filter((x) => x).length > 0) {\n          list.push(obj);\n        }\n      }\n    }\n    this.setState({\n      inputJson: list,\n      inpSuccess: 'Server not received',\n    });\n    const classId = JSON.parse(sessionStorage.getItem('TableInfo'))\n      ? JSON.parse(sessionStorage.getItem('TableInfo')).classId\n      : '';\n    let inpjson = this.state.inputJson;\n    const cleanPhoneNumber = (phoneNumber) => {\n      if (phoneNumber[0] === \"'\") {\n        phoneNumber = phoneNumber.substring(1, phoneNumber.length);\n      }\n      return phoneNumber;\n    };\n    inpjson = inpjson.map((student) => {\n      return {\n        dateOfBirth: student.dateOfBirth,\n        drl: student.drl,\n        email: student.email,\n        gpa: student.gpa,\n        name: student.name,\n        username: student.username,\n        phoneNumber: cleanPhoneNumber(student.phoneNumber),\n        parentPhoneNumber: cleanPhoneNumber(student.parentPhoneNumber),\n      };\n    });\n    axios\n      .post(`http://localhost:5000/api/classes/${classId}/import`, {\n        inpjson,\n      })\n      .then((res) => {\n        console.log(res.data);\n        this.props.setData(res.data);\n        // if (res.data.status == 'OK') {\n        //   this.setState({\n        //     inputJson: this.state.inputJson,\n        //     inpSuccess: 'Import successfully',\n        //   });\n        // }\n        // console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // console.log(this.state.inputJson);\n    // console.log(this.state.inpSuccess);\n  };\n\n  showFile = async (e) => {\n    // inputJson = null;\n    e.preventDefault();\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      const text = e.target.result;\n      console.log(text);\n      this.processData(text);\n    };\n    try {\n      reader.readAsText(e.target.files[0]);\n    } catch (error) {\n      this.setState({\n        inputJson: this.state.inputJson,\n        inpSuccess: 'Import failed',\n      });\n      console.log('ERROR!!!!!');\n      console.log(error);\n    }\n  };\n\n  // showing = needInput => {\n  //   if(needInput) needInput = false;\n  //   else needInput = true;\n  // }\n  render = () => {\n    //console.log(this.props.setData());\n    return (\n      <div>\n        <label for=\"file-upload\" className=\"custom-file-upload\">\n          <FontAwesomeIcon\n            icon={faUpload}\n            size=\"lg\"\n            style={{ marginRight: '10px' }}\n          />\n          Upload file\n        </label>\n        <input\n          id=\"file-upload\"\n          type=\"file\"\n          onChange={(e) => this.showFile(e)}\n          style={{ width: '260px', display: 'none' }}\n        />\n        {/* {this.state.inpSuccess == 'Import successfully' ? (\n          <p style={{ color: 'blue' }}>Nhập file thành công</p>\n        ) : this.state.inpSuccess == 'Server not received' ? (\n          <p style={{ color: 'red' }}>Lỗi máy chủ. Xin vui lòng thử lại</p>\n        ) : this.state.inpSuccess == 'Import failed' ? (\n          <p style={{ color: 'red' }}>\n            Nhập file thất bại. Xin vui lòng thử lại\n          </p>\n        ) : (\n          <></>\n        )} */}\n      </div>\n    );\n  };\n}\n\nexport default FileInput;\n"]},"metadata":{},"sourceType":"module"}