{"ast":null,"code":"var _jsxFileName = \"/home/thainguyen/Source/uet-smta-test/src/Forum/Posts/Comment.js\",\n    _s = $RefreshSig$();\n\nimport React, { PureComponent, useState } from 'react';\nimport './Comment.css';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction changeDateFormat(responseDate) {\n  var date = new Date(responseDate);\n  var min = date.getMinutes();\n  var hour = date.getHours();\n  var second = date.getSeconds();\n  var day = date.getUTCDate();\n  var month = date.getUTCMonth() + 1;\n  var year = date.getFullYear();\n  month = (month > 9 ? '' : '0') + month;\n  day = (day > 9 ? '' : '0') + day;\n  return `${year}-${month}-${day} ${hour}:${min}:${second}`;\n}\n\nconst Comment = _ref => {\n  _s();\n\n  let {\n    commentData,\n    comments,\n    setComments\n  } = _ref;\n  const [newComment, setNewComment] = useState('');\n  const username = JSON.parse(sessionStorage.getItem('user')) ? JSON.parse(sessionStorage.getItem('user')).username : '';\n  const name = JSON.parse(sessionStorage.getItem('user')) ? JSON.parse(sessionStorage.getItem('user')).name : '';\n\n  const handleAnswer = e => {\n    if (newComment.length > 0) {\n      axios.post(`/comments/${commentData.id}/${username}`, {\n        content: newComment\n      }).then(res => {\n        setNewComment('');\n        setComments([...comments, {\n          content: newComment,\n          createdAt: res.data.createdAt,\n          id: res.data.commentId,\n          owner: name\n        }]);\n      }).catch(err => {\n        console.log(err);\n      });\n      axios.post(`/notifications/create/${username}?type=bình luận`).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pop-up-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-author-and-time\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-of-sb\",\n          children: commentData.owner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"time-taken\",\n          children: [\". \", changeDateFormat(commentData.createdAt)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ti\\xEAu \\u0111\\u1EC1: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: commentData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-detail\",\n        children: commentData.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typeComment\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"commentDetail\",\n        id: \"commentDetail\",\n        placeholder: \"Nh\\u1EADp b\\xECnh lu\\u1EADn...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Tr\\u1EA3 l\\u1EDDi\",\n        id: \"answerCommentButton\",\n        onClick: handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: comments,\n      setComments: setComments,\n      postId: commentData.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comment, \"4CPgt7oQpkJXYA7nM53m+f+bai8=\");\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/home/thainguyen/Source/uet-smta-test/src/Forum/Posts/Comment.js"],"names":["React","PureComponent","useState","axios","CommentList","changeDateFormat","responseDate","date","Date","min","getMinutes","hour","getHours","second","getSeconds","day","getUTCDate","month","getUTCMonth","year","getFullYear","Comment","commentData","comments","setComments","newComment","setNewComment","username","JSON","parse","sessionStorage","getItem","name","handleAnswer","e","length","post","id","content","then","res","createdAt","data","commentId","owner","catch","err","console","log","preventDefault","title","target","value"],"mappings":"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","sourcesContent":["import React, { PureComponent, useState } from 'react';\nimport './Comment.css';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nfunction changeDateFormat(responseDate) {\n  var date = new Date(responseDate);\n  var min = date.getMinutes();\n  var hour = date.getHours();\n  var second = date.getSeconds();\n  var day = date.getUTCDate();\n  var month = date.getUTCMonth() + 1;\n  var year = date.getFullYear();\n\n  month = (month > 9 ? '' : '0') + month;\n  day = (day > 9 ? '' : '0') + day;\n\n  return `${year}-${month}-${day} ${hour}:${min}:${second}`;\n}\nconst Comment = ({ commentData, comments, setComments }) => {\n  const [newComment, setNewComment] = useState('');\n  const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n  const name = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).name\n    : '';\n  const handleAnswer = (e) => {\n    if (newComment.length > 0) {\n      axios\n        .post(`/comments/${commentData.id}/${username}`, {\n          content: newComment,\n        })\n        .then((res) => {\n          setNewComment('');\n          setComments([\n            ...comments,\n            {\n              content: newComment,\n              createdAt: res.data.createdAt,\n              id: res.data.commentId,\n              owner: name,\n            },\n          ]);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      axios\n        .post(`/notifications/create/${username}?type=bình luận`)\n        .then((res) => {\n          console.log(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    e.preventDefault();\n  };\n  return (\n    <div className=\"pop-up-post\">\n      <div className=\"post-content\">\n        <div className=\"post-author-and-time\">\n          <p className=\"post-of-sb\">{commentData.owner}</p>\n          <div className=\"separator\" />\n          <p className=\"time-taken\">\n            . {changeDateFormat(commentData.createdAt)}\n          </p>\n        </div>\n        <div className=\"post-header\">\n          <p>Tiêu đề: </p>\n          <div className=\"separator\" />\n          <p>{commentData.title}</p>\n        </div>\n        <hr />\n        <p className=\"post-detail\">{commentData.content}</p>\n        <hr />\n      </div>\n      <div className=\"typeComment\">\n        <input\n          type=\"text\"\n          name=\"commentDetail\"\n          id=\"commentDetail\"\n          placeholder=\"Nhập bình luận...\"\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n        />\n        <input\n          type=\"submit\"\n          value=\"Trả lời\"\n          id=\"answerCommentButton\"\n          onClick={handleAnswer}\n        />\n      </div>\n      {/* <OnlyCmt data={commentData.comments} postId={commentData.id} /> */}\n      <CommentList\n        comments={comments}\n        setComments={setComments}\n        postId={commentData.id}\n      />\n    </div>\n  );\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}