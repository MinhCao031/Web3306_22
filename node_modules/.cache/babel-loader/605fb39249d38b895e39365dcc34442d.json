{"ast":null,"code":"var _jsxFileName = \"/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfStudents/Table.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nimport './ListOfStudents.css';\nimport ClassName from './ClassName';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport FilterButton from '../Filters/FilterButton';\nimport AddStudentButton from './AddStudentButton';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport SaveIcon from '@mui/icons-material/Save';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport Fab from '@mui/material/Fab';\nimport SpecificFilterButton from '../Filters/SpecificFilterButton';\nimport FileInput from '../FileInput/FileInput';\nimport FileExport from '../FileExport/FileExport';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = () => {\n  _s();\n\n  const [userList, setUserList] = useState([]);\n  const [deletedRows, setDeletedRows] = useState([]);\n  const [editedRows, setEditedRows] = useState([]);\n\n  const getUniqueListBy = (arr, key) => {\n    return [...new Map(arr.map(item => [item[key], item])).values()];\n  };\n\n  console.log(userList);\n  const filterData = {\n    delay: 100,\n    style: {\n      border: 'none',\n      paddingLeft: 0,\n      margin: 0\n    },\n    placeholder: 'Tìm kiếm'\n  };\n  const columns = [{\n    dataField: 'name',\n    text: 'Họ và tên',\n    sort: true,\n    filter: textFilter(filterData),\n    editable: false\n  }, {\n    dataField: 'username',\n    text: 'MSSV',\n    sort: true,\n    filter: textFilter(filterData)\n  }, {\n    dataField: 'dateOfBirth',\n    text: 'Ngày sinh',\n    sort: true,\n    filter: textFilter(filterData),\n    formatter: cell => {\n      let date = cell;\n\n      if (typeof cell !== 'object') {\n        date = new Date(cell);\n      }\n\n      let day = date.getUTCDate();\n      let month = date.getUTCMonth() + 1;\n      let year = date.getFullYear();\n      month = (month > 9 ? '' : '0') + month;\n      day = (day > 9 ? '' : '0') + day;\n      return `${year}-${month}-${day}`;\n    },\n    // editor: {\n    //   type: Type.DATE,\n    // },\n    editable: false\n  }, // {\n  //   dataField: 'gender',\n  //   text: 'Giới tính',\n  //   sort: true,\n  //   filter: textFilter(filterData),\n  //   editor: {\n  //     type: Type.SELECT,\n  //     options: [\n  //       {\n  //         value: 'Nam',\n  //         label: 'Nam',\n  //       },\n  //       {\n  //         value: 'Nữ',\n  //         label: 'Nữ',\n  //       },\n  //     ],\n  //   },\n  // },\n  {\n    dataField: 'email',\n    text: 'Email',\n    sort: true,\n    filter: textFilter(filterData),\n    editable: false\n  }, {\n    dataField: 'phoneNumber',\n    text: 'Số điện thoại',\n    sort: true,\n    filter: textFilter(filterData),\n    editable: false,\n    validator: (newValue, row, column) => {\n      if (/[a-zA-Z]/g.test(newValue) || newValue.length != 10) {\n        return {\n          valid: false,\n          message: 'Số điện thoại không hợp lệ'\n        };\n      }\n\n      return true;\n    }\n  }, {\n    dataField: 'parentPhoneNumber',\n    text: 'Số điện thoại PH',\n    sort: true,\n    filter: textFilter(filterData),\n    editable: false,\n    validator: (newValue, row, column) => {\n      if (/[a-zA-Z]/g.test(newValue) || newValue.length != 10) {\n        return {\n          valid: false,\n          message: 'Số điện thoại không hợp lệ'\n        };\n      }\n\n      return true;\n    }\n  }, {\n    dataField: 'gpa',\n    text: 'GPA',\n    sort: true,\n    filter: textFilter(filterData),\n    validator: (newValue, row, column) => {\n      if (newValue.length <= 0) {\n        return {\n          valid: false,\n          message: 'GPA không được để trống'\n        };\n      }\n\n      if (isNaN(newValue)) {\n        return {\n          valid: false,\n          message: 'Vui lòng điền giá trị giữa 0 và 4'\n        };\n      }\n\n      if (newValue < 0 || newValue > 4) {\n        return {\n          valid: false,\n          message: 'Vui lòng điền giá trị giữa 0 và 4'\n        };\n      }\n\n      return true;\n    }\n  }, {\n    dataField: 'drl',\n    text: 'ĐRL',\n    sort: true,\n    filter: textFilter(filterData),\n    validator: (newValue, row, column) => {\n      if (newValue.length <= 0) {\n        return {\n          valid: false,\n          message: 'ĐRL không được để trống'\n        };\n      }\n\n      if (isNaN(newValue)) {\n        return {\n          valid: false,\n          message: 'Vui lòng điền giá trị giữa 0 và 100'\n        };\n      }\n\n      if (newValue < 0 || newValue > 100) {\n        return {\n          valid: false,\n          message: 'Vui lòng điền giá trị giữa 0 và 100'\n        };\n      }\n\n      return true;\n    }\n  }];\n  const pagination = paginationFactory({\n    page: 1,\n    sizePerPage: 10,\n    lastPageText: '>>',\n    firstPageText: '<<',\n    nextPageText: '>',\n    prevPageText: '<',\n    alwaysShowAllBtns: true,\n    sizePerPageList: [{\n      text: '10',\n      value: 10\n    }, {\n      text: '20',\n      value: 20\n    }, {\n      text: '30',\n      value: 30\n    }, {\n      text: 'All',\n      value: userList.length\n    }]\n  });\n  const selectRow = {\n    mode: 'checkbox',\n    selectionRenderer: _ref => {\n      let {\n        mode,\n        ...rest\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: mode,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 47\n      }, this);\n    },\n    selectColumnPosition: 'right',\n    style: {\n      backgroundColor: '#c8e6c9'\n    },\n    headerColumnStyle: {\n      textAlign: 'center'\n    },\n    onSelect: (row, isSelect, rowIndex, e) => {\n      if (isSelect) {\n        setDeletedRows([...deletedRows, row.username]);\n      } else {\n        setDeletedRows(deletedRows.filter(item => item !== row.username));\n      }\n    },\n    onSelectAll: (isSelect, rows, e) => {\n      if (isSelect) {\n        setDeletedRows(rows.map(item => item.username));\n      } else {\n        setDeletedRows([]);\n      }\n    }\n  };\n  const classId = JSON.parse(sessionStorage.getItem('TableInfo')) ? JSON.parse(sessionStorage.getItem('TableInfo')).classId : '';\n  const username = JSON.parse(sessionStorage.getItem('user')) ? JSON.parse(sessionStorage.getItem('user')).username : '';\n  const classNameTable = JSON.parse(sessionStorage.getItem('TableInfo')) ? JSON.parse(sessionStorage.getItem('TableInfo')).className : 'Loading...';\n  useEffect(() => {\n    axios.post(`http://localhost:5000/api/classes/students`, null, {\n      params: {\n        class_id: classId,\n        role: 'Teacher',\n        user_id: username\n      }\n    }).then(res => {\n      setUserList(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const handleSaveAction = e => {\n    const req = {\n      removed: deletedRows,\n      edited: getUniqueListBy(editedRows, 'username')\n    };\n    axios.post(`http://localhost:5000/api/classes/${classId}/update`, req).then(res => {\n      console.log(res);\n    }).catch(err => console.log(err));\n    e.preventDefault();\n  };\n\n  const handleDeleteAction = e => {\n    setUserList(userList.filter(item => !deletedRows.includes(item.username)));\n    e.preventDefault();\n  };\n\n  const handleCancelAction = e => {\n    axios.post(`http://localhost:5000/api/classes/students`, null, {\n      params: {\n        class_id: classId,\n        role: 'Teacher',\n        user_id: username\n      }\n    }).then(res => {\n      setUserList(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 1,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(SpecificFilterButton, {\n        setData: setUserList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddStudentButton, {\n        data: userList,\n        setData: setUserList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        \"aria-label\": \"delete\",\n        size: \"medium\",\n        onClick: handleDeleteAction,\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClassName, {\n      children: classNameTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: /*#__PURE__*/_jsxDEV(FilterButton, {\n        setData: setUserList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n      bootstrap4: true,\n      hover: true,\n      keyField: \"username\",\n      columns: columns,\n      data: userList,\n      pagination: pagination,\n      filter: filterFactory(),\n      noDataIndication: \"Kh\\xF4ng c\\xF3 sinh vi\\xEAn\",\n      selectRow: selectRow,\n      bordered: true,\n      cellEdit: cellEditFactory({\n        mode: 'click',\n        blurToSave: true,\n        autoSelectText: true,\n        afterSaveCell: (oldValue, newValue, row, column) => {\n          if (oldValue != newValue) {\n            setEditedRows([...editedRows, row]);\n          }\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ioFile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FileIn\",\n        children: /*#__PURE__*/_jsxDEV(FileInput, {\n          setData: setUserList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FileOut\",\n        children: /*#__PURE__*/_jsxDEV(FileExport, {\n          data: userList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saveButton\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleCancelAction,\n          color: \"error\",\n          startIcon: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 24\n          }, this),\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSaveAction,\n          color: \"success\",\n          startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 24\n          }, this),\n          children: \"L\\u01B0u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Table, \"1ywTYOc5aKoDPKlN6UD2r+JILgI=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/thainguyen/Source/uet-smta-test/src/Lists/ListOfStudents/Table.js"],"names":["React","useEffect","useState","axios","BootstrapTable","paginationFactory","filterFactory","textFilter","cellEditFactory","Type","ClassName","Stack","Button","FilterButton","AddStudentButton","DeleteOutlineIcon","SaveIcon","ClearIcon","Fab","SpecificFilterButton","FileInput","FileExport","Table","userList","setUserList","deletedRows","setDeletedRows","editedRows","setEditedRows","getUniqueListBy","arr","key","Map","map","item","values","console","log","filterData","delay","style","border","paddingLeft","margin","placeholder","columns","dataField","text","sort","filter","editable","formatter","cell","date","Date","day","getUTCDate","month","getUTCMonth","year","getFullYear","validator","newValue","row","column","test","length","valid","message","isNaN","pagination","page","sizePerPage","lastPageText","firstPageText","nextPageText","prevPageText","alwaysShowAllBtns","sizePerPageList","value","selectRow","mode","selectionRenderer","rest","selectColumnPosition","backgroundColor","headerColumnStyle","textAlign","onSelect","isSelect","rowIndex","e","username","onSelectAll","rows","classId","JSON","parse","sessionStorage","getItem","classNameTable","className","post","params","class_id","role","user_id","then","res","data","catch","err","handleSaveAction","req","removed","edited","preventDefault","handleDeleteAction","includes","handleCancelAction","blurToSave","autoSelectText","afterSaveCell","oldValue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nimport './ListOfStudents.css';\nimport ClassName from './ClassName';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport FilterButton from '../Filters/FilterButton';\nimport AddStudentButton from './AddStudentButton';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport SaveIcon from '@mui/icons-material/Save';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport Fab from '@mui/material/Fab';\nimport SpecificFilterButton from '../Filters/SpecificFilterButton';\nimport FileInput from '../FileInput/FileInput';\nimport FileExport from '../FileExport/FileExport';\nconst Table = () => {\n  const [userList, setUserList] = useState([]);\n  const [deletedRows, setDeletedRows] = useState([]);\n  const [editedRows, setEditedRows] = useState([]);\n  const getUniqueListBy = (arr, key) => {\n    return [...new Map(arr.map((item) => [item[key], item])).values()];\n  };\n  console.log(userList);\n  const filterData = {\n    delay: 100,\n    style: {\n      border: 'none',\n      paddingLeft: 0,\n      margin: 0,\n    },\n    placeholder: 'Tìm kiếm',\n  };\n  const columns = [\n    {\n      dataField: 'name',\n      text: 'Họ và tên',\n      sort: true,\n      filter: textFilter(filterData),\n      editable: false,\n    },\n    {\n      dataField: 'username',\n      text: 'MSSV',\n      sort: true,\n      filter: textFilter(filterData),\n    },\n    {\n      dataField: 'dateOfBirth',\n      text: 'Ngày sinh',\n      sort: true,\n      filter: textFilter(filterData),\n      formatter: (cell) => {\n        let date = cell;\n        if (typeof cell !== 'object') {\n          date = new Date(cell);\n        }\n        let day = date.getUTCDate();\n        let month = date.getUTCMonth() + 1;\n        let year = date.getFullYear();\n\n        month = (month > 9 ? '' : '0') + month;\n        day = (day > 9 ? '' : '0') + day;\n\n        return `${year}-${month}-${day}`;\n      },\n      // editor: {\n      //   type: Type.DATE,\n      // },\n      editable: false,\n    },\n    // {\n    //   dataField: 'gender',\n    //   text: 'Giới tính',\n    //   sort: true,\n    //   filter: textFilter(filterData),\n    //   editor: {\n    //     type: Type.SELECT,\n    //     options: [\n    //       {\n    //         value: 'Nam',\n    //         label: 'Nam',\n    //       },\n    //       {\n    //         value: 'Nữ',\n    //         label: 'Nữ',\n    //       },\n    //     ],\n    //   },\n    // },\n    {\n      dataField: 'email',\n      text: 'Email',\n      sort: true,\n      filter: textFilter(filterData),\n      editable: false,\n    },\n    {\n      dataField: 'phoneNumber',\n      text: 'Số điện thoại',\n      sort: true,\n      filter: textFilter(filterData),\n      editable: false,\n      validator: (newValue, row, column) => {\n        if (/[a-zA-Z]/g.test(newValue) || newValue.length != 10) {\n          return {\n            valid: false,\n            message: 'Số điện thoại không hợp lệ',\n          };\n        }\n        return true;\n      },\n    },\n    {\n      dataField: 'parentPhoneNumber',\n      text: 'Số điện thoại PH',\n      sort: true,\n      filter: textFilter(filterData),\n      editable: false,\n      validator: (newValue, row, column) => {\n        if (/[a-zA-Z]/g.test(newValue) || newValue.length != 10) {\n          return {\n            valid: false,\n            message: 'Số điện thoại không hợp lệ',\n          };\n        }\n        return true;\n      },\n    },\n    {\n      dataField: 'gpa',\n      text: 'GPA',\n      sort: true,\n      filter: textFilter(filterData),\n      validator: (newValue, row, column) => {\n        if (newValue.length <= 0) {\n          return {\n            valid: false,\n            message: 'GPA không được để trống',\n          };\n        }\n        if (isNaN(newValue)) {\n          return {\n            valid: false,\n            message: 'Vui lòng điền giá trị giữa 0 và 4',\n          };\n        }\n        if (newValue < 0 || newValue > 4) {\n          return {\n            valid: false,\n            message: 'Vui lòng điền giá trị giữa 0 và 4',\n          };\n        }\n        return true;\n      },\n    },\n    {\n      dataField: 'drl',\n      text: 'ĐRL',\n      sort: true,\n      filter: textFilter(filterData),\n      validator: (newValue, row, column) => {\n        if (newValue.length <= 0) {\n          return {\n            valid: false,\n            message: 'ĐRL không được để trống',\n          };\n        }\n        if (isNaN(newValue)) {\n          return {\n            valid: false,\n            message: 'Vui lòng điền giá trị giữa 0 và 100',\n          };\n        }\n        if (newValue < 0 || newValue > 100) {\n          return {\n            valid: false,\n            message: 'Vui lòng điền giá trị giữa 0 và 100',\n          };\n        }\n        return true;\n      },\n    },\n  ];\n  const pagination = paginationFactory({\n    page: 1,\n    sizePerPage: 10,\n    lastPageText: '>>',\n    firstPageText: '<<',\n    nextPageText: '>',\n    prevPageText: '<',\n    alwaysShowAllBtns: true,\n    sizePerPageList: [\n      {\n        text: '10',\n        value: 10,\n      },\n      {\n        text: '20',\n        value: 20,\n      },\n      {\n        text: '30',\n        value: 30,\n      },\n      {\n        text: 'All',\n        value: userList.length,\n      },\n    ],\n  });\n  const selectRow = {\n    mode: 'checkbox',\n    selectionRenderer: ({ mode, ...rest }) => <input type={mode} {...rest} />,\n    selectColumnPosition: 'right',\n    style: { backgroundColor: '#c8e6c9' },\n    headerColumnStyle: {\n      textAlign: 'center',\n    },\n    onSelect: (row, isSelect, rowIndex, e) => {\n      if (isSelect) {\n        setDeletedRows([...deletedRows, row.username]);\n      } else {\n        setDeletedRows(deletedRows.filter((item) => item !== row.username));\n      }\n    },\n    onSelectAll: (isSelect, rows, e) => {\n      if (isSelect) {\n        setDeletedRows(rows.map((item) => item.username));\n      } else {\n        setDeletedRows([]);\n      }\n    },\n  };\n  const classId = JSON.parse(sessionStorage.getItem('TableInfo'))\n    ? JSON.parse(sessionStorage.getItem('TableInfo')).classId\n    : '';\n  const username = JSON.parse(sessionStorage.getItem('user'))\n    ? JSON.parse(sessionStorage.getItem('user')).username\n    : '';\n  const classNameTable = JSON.parse(sessionStorage.getItem('TableInfo'))\n    ? JSON.parse(sessionStorage.getItem('TableInfo')).className\n    : 'Loading...';\n  useEffect(() => {\n    axios\n      .post(`http://localhost:5000/api/classes/students`, null, {\n        params: {\n          class_id: classId,\n          role: 'Teacher',\n          user_id: username,\n        },\n      })\n      .then((res) => {\n        setUserList(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  const handleSaveAction = (e) => {\n    const req = {\n      removed: deletedRows,\n      edited: getUniqueListBy(editedRows, 'username'),\n    };\n    axios\n      .post(`http://localhost:5000/api/classes/${classId}/update`, req)\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => console.log(err));\n    e.preventDefault();\n  };\n  const handleDeleteAction = (e) => {\n    setUserList(\n      userList.filter((item) => !deletedRows.includes(item.username))\n    );\n    e.preventDefault();\n  };\n  const handleCancelAction = (e) => {\n    axios\n      .post(`http://localhost:5000/api/classes/students`, null, {\n        params: {\n          class_id: classId,\n          role: 'Teacher',\n          user_id: username,\n        },\n      })\n      .then((res) => {\n        setUserList(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    e.preventDefault();\n  };\n  return (\n    <>\n      <Stack spacing={1} direction=\"row\">\n        <SpecificFilterButton setData={setUserList} />\n        <AddStudentButton data={userList} setData={setUserList} />\n        <Fab aria-label=\"delete\" size=\"medium\" onClick={handleDeleteAction}>\n          <DeleteOutlineIcon />\n        </Fab>\n      </Stack>\n      <ClassName>{classNameTable}</ClassName>\n      <div className=\"filter\">\n        <FilterButton setData={setUserList} />\n      </div>\n      <BootstrapTable\n        bootstrap4\n        hover={true}\n        keyField=\"username\"\n        columns={columns}\n        data={userList}\n        pagination={pagination}\n        filter={filterFactory()}\n        noDataIndication=\"Không có sinh viên\"\n        selectRow={selectRow}\n        bordered={true}\n        cellEdit={cellEditFactory({\n          mode: 'click',\n          blurToSave: true,\n          autoSelectText: true,\n          afterSaveCell: (oldValue, newValue, row, column) => {\n            if (oldValue != newValue) {\n              setEditedRows([...editedRows, row]);\n            }\n          },\n        })}\n      />\n      <div className=\"ioFile\">\n        <div className=\"FileIn\">\n          <FileInput setData={setUserList} />\n        </div>\n        <div className=\"FileOut\">\n          <FileExport data={userList} />\n        </div>\n      </div>\n      <div className=\"saveButton\">\n        <Stack spacing={3} direction=\"row\">\n          <Button\n            variant=\"contained\"\n            onClick={handleCancelAction}\n            color=\"error\"\n            startIcon={<ClearIcon />}\n          >\n            Hủy\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={handleSaveAction}\n            color=\"success\"\n            startIcon={<SaveIcon />}\n          >\n            Lưu\n          </Button>\n        </Stack>\n      </div>\n    </>\n  );\n};\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}